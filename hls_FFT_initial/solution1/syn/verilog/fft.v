// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fft_fft,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=2776,HLS_SYN_LUT=6459,HLS_VERSION=2022_1}" *)

module fft (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        X_R_address0,
        X_R_ce0,
        X_R_we0,
        X_R_d0,
        X_R_q0,
        X_R_address1,
        X_R_ce1,
        X_R_we1,
        X_R_d1,
        X_R_q1,
        X_I_address0,
        X_I_ce0,
        X_I_we0,
        X_I_d0,
        X_I_q0,
        X_I_address1,
        X_I_ce1,
        X_I_we1,
        X_I_d1,
        X_I_q1
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] X_R_address0;
output   X_R_ce0;
output   X_R_we0;
output  [31:0] X_R_d0;
input  [31:0] X_R_q0;
output  [9:0] X_R_address1;
output   X_R_ce1;
output   X_R_we1;
output  [31:0] X_R_d1;
input  [31:0] X_R_q1;
output  [9:0] X_I_address0;
output   X_I_ce0;
output   X_I_we0;
output  [31:0] X_I_d0;
input  [31:0] X_I_q0;
output  [9:0] X_I_address1;
output   X_I_ce1;
output   X_I_we1;
output  [31:0] X_I_d1;
input  [31:0] X_I_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] X_R_address0;
reg X_R_ce0;
reg X_R_we0;
reg[31:0] X_R_d0;
reg[9:0] X_R_address1;
reg X_R_ce1;
reg X_R_we1;
reg[31:0] X_R_d1;
reg[9:0] X_I_address0;
reg X_I_ce0;
reg X_I_we0;
reg[31:0] X_I_d0;
reg[9:0] X_I_address1;
reg X_I_ce1;
reg X_I_we1;
reg[31:0] X_I_d1;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [8:0] W_real_address0;
reg    W_real_ce0;
wire   [31:0] W_real_q0;
wire   [8:0] W_imag_address0;
reg    W_imag_ce0;
wire   [31:0] W_imag_q0;
wire   [10:0] DFTpts_fu_150_p2;
reg   [10:0] DFTpts_reg_224;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln90_fu_136_p2;
reg   [9:0] trunc_ln_reg_229;
wire  signed [8:0] trunc_ln98_fu_172_p1;
reg  signed [8:0] trunc_ln98_reg_235;
wire   [9:0] add_ln98_fu_181_p2;
reg   [9:0] add_ln98_reg_243;
wire    ap_CS_fsm_state4;
wire   [8:0] ret_V_fu_191_p2;
reg   [8:0] ret_V_reg_248;
wire   [0:0] icmp_ln98_fu_176_p2;
wire    ap_CS_fsm_state5;
reg   [31:0] c2_reg_263;
wire    ap_CS_fsm_state6;
reg   [31:0] s2_reg_268;
wire    grp_fft_Pipeline_Reverse_fu_104_ap_start;
wire    grp_fft_Pipeline_Reverse_fu_104_ap_done;
wire    grp_fft_Pipeline_Reverse_fu_104_ap_idle;
wire    grp_fft_Pipeline_Reverse_fu_104_ap_ready;
wire   [9:0] grp_fft_Pipeline_Reverse_fu_104_X_R_address0;
wire    grp_fft_Pipeline_Reverse_fu_104_X_R_ce0;
wire    grp_fft_Pipeline_Reverse_fu_104_X_R_we0;
wire   [31:0] grp_fft_Pipeline_Reverse_fu_104_X_R_d0;
wire   [9:0] grp_fft_Pipeline_Reverse_fu_104_X_R_address1;
wire    grp_fft_Pipeline_Reverse_fu_104_X_R_ce1;
wire    grp_fft_Pipeline_Reverse_fu_104_X_R_we1;
wire   [31:0] grp_fft_Pipeline_Reverse_fu_104_X_R_d1;
wire   [9:0] grp_fft_Pipeline_Reverse_fu_104_X_I_address0;
wire    grp_fft_Pipeline_Reverse_fu_104_X_I_ce0;
wire    grp_fft_Pipeline_Reverse_fu_104_X_I_we0;
wire   [31:0] grp_fft_Pipeline_Reverse_fu_104_X_I_d0;
wire   [9:0] grp_fft_Pipeline_Reverse_fu_104_X_I_address1;
wire    grp_fft_Pipeline_Reverse_fu_104_X_I_ce1;
wire    grp_fft_Pipeline_Reverse_fu_104_X_I_we1;
wire   [31:0] grp_fft_Pipeline_Reverse_fu_104_X_I_d1;
wire    grp_fft_Pipeline_DFTpts_fu_112_ap_start;
wire    grp_fft_Pipeline_DFTpts_fu_112_ap_done;
wire    grp_fft_Pipeline_DFTpts_fu_112_ap_idle;
wire    grp_fft_Pipeline_DFTpts_fu_112_ap_ready;
wire   [9:0] grp_fft_Pipeline_DFTpts_fu_112_X_R_address0;
wire    grp_fft_Pipeline_DFTpts_fu_112_X_R_ce0;
wire    grp_fft_Pipeline_DFTpts_fu_112_X_R_we0;
wire   [31:0] grp_fft_Pipeline_DFTpts_fu_112_X_R_d0;
wire   [9:0] grp_fft_Pipeline_DFTpts_fu_112_X_R_address1;
wire    grp_fft_Pipeline_DFTpts_fu_112_X_R_ce1;
wire    grp_fft_Pipeline_DFTpts_fu_112_X_R_we1;
wire   [31:0] grp_fft_Pipeline_DFTpts_fu_112_X_R_d1;
wire   [9:0] grp_fft_Pipeline_DFTpts_fu_112_X_I_address0;
wire    grp_fft_Pipeline_DFTpts_fu_112_X_I_ce0;
wire    grp_fft_Pipeline_DFTpts_fu_112_X_I_we0;
wire   [31:0] grp_fft_Pipeline_DFTpts_fu_112_X_I_d0;
wire   [9:0] grp_fft_Pipeline_DFTpts_fu_112_X_I_address1;
wire    grp_fft_Pipeline_DFTpts_fu_112_X_I_ce1;
wire    grp_fft_Pipeline_DFTpts_fu_112_X_I_we1;
wire   [31:0] grp_fft_Pipeline_DFTpts_fu_112_X_I_d1;
reg   [9:0] j_reg_92;
wire    ap_CS_fsm_state7;
reg    grp_fft_Pipeline_Reverse_fu_104_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_fft_Pipeline_DFTpts_fu_112_ap_start_reg;
wire   [63:0] zext_ln1540_fu_206_p1;
reg   [3:0] stage_fu_62;
wire   [3:0] stage_3_fu_196_p2;
wire   [10:0] zext_ln90_1_fu_146_p1;
wire   [18:0] zext_ln90_fu_142_p1;
wire   [18:0] ec_V_fu_166_p2;
wire  signed [8:0] ret_V_fu_191_p0;
reg   [6:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 grp_fft_Pipeline_Reverse_fu_104_ap_start_reg = 1'b0;
#0 grp_fft_Pipeline_DFTpts_fu_112_ap_start_reg = 1'b0;
end

fft_W_real_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
W_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_real_address0),
    .ce0(W_real_ce0),
    .q0(W_real_q0)
);

fft_W_imag_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
W_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_imag_address0),
    .ce0(W_imag_ce0),
    .q0(W_imag_q0)
);

fft_fft_Pipeline_Reverse grp_fft_Pipeline_Reverse_fu_104(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fft_Pipeline_Reverse_fu_104_ap_start),
    .ap_done(grp_fft_Pipeline_Reverse_fu_104_ap_done),
    .ap_idle(grp_fft_Pipeline_Reverse_fu_104_ap_idle),
    .ap_ready(grp_fft_Pipeline_Reverse_fu_104_ap_ready),
    .X_R_address0(grp_fft_Pipeline_Reverse_fu_104_X_R_address0),
    .X_R_ce0(grp_fft_Pipeline_Reverse_fu_104_X_R_ce0),
    .X_R_we0(grp_fft_Pipeline_Reverse_fu_104_X_R_we0),
    .X_R_d0(grp_fft_Pipeline_Reverse_fu_104_X_R_d0),
    .X_R_q0(X_R_q0),
    .X_R_address1(grp_fft_Pipeline_Reverse_fu_104_X_R_address1),
    .X_R_ce1(grp_fft_Pipeline_Reverse_fu_104_X_R_ce1),
    .X_R_we1(grp_fft_Pipeline_Reverse_fu_104_X_R_we1),
    .X_R_d1(grp_fft_Pipeline_Reverse_fu_104_X_R_d1),
    .X_R_q1(X_R_q1),
    .X_I_address0(grp_fft_Pipeline_Reverse_fu_104_X_I_address0),
    .X_I_ce0(grp_fft_Pipeline_Reverse_fu_104_X_I_ce0),
    .X_I_we0(grp_fft_Pipeline_Reverse_fu_104_X_I_we0),
    .X_I_d0(grp_fft_Pipeline_Reverse_fu_104_X_I_d0),
    .X_I_q0(X_I_q0),
    .X_I_address1(grp_fft_Pipeline_Reverse_fu_104_X_I_address1),
    .X_I_ce1(grp_fft_Pipeline_Reverse_fu_104_X_I_ce1),
    .X_I_we1(grp_fft_Pipeline_Reverse_fu_104_X_I_we1),
    .X_I_d1(grp_fft_Pipeline_Reverse_fu_104_X_I_d1),
    .X_I_q1(X_I_q1)
);

fft_fft_Pipeline_DFTpts grp_fft_Pipeline_DFTpts_fu_112(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fft_Pipeline_DFTpts_fu_112_ap_start),
    .ap_done(grp_fft_Pipeline_DFTpts_fu_112_ap_done),
    .ap_idle(grp_fft_Pipeline_DFTpts_fu_112_ap_idle),
    .ap_ready(grp_fft_Pipeline_DFTpts_fu_112_ap_ready),
    .zext_ln98_1(j_reg_92),
    .trunc_ln(trunc_ln_reg_229),
    .X_R_address0(grp_fft_Pipeline_DFTpts_fu_112_X_R_address0),
    .X_R_ce0(grp_fft_Pipeline_DFTpts_fu_112_X_R_ce0),
    .X_R_we0(grp_fft_Pipeline_DFTpts_fu_112_X_R_we0),
    .X_R_d0(grp_fft_Pipeline_DFTpts_fu_112_X_R_d0),
    .X_R_q0(X_R_q0),
    .X_R_address1(grp_fft_Pipeline_DFTpts_fu_112_X_R_address1),
    .X_R_ce1(grp_fft_Pipeline_DFTpts_fu_112_X_R_ce1),
    .X_R_we1(grp_fft_Pipeline_DFTpts_fu_112_X_R_we1),
    .X_R_d1(grp_fft_Pipeline_DFTpts_fu_112_X_R_d1),
    .X_R_q1(X_R_q1),
    .c2(c2_reg_263),
    .X_I_address0(grp_fft_Pipeline_DFTpts_fu_112_X_I_address0),
    .X_I_ce0(grp_fft_Pipeline_DFTpts_fu_112_X_I_ce0),
    .X_I_we0(grp_fft_Pipeline_DFTpts_fu_112_X_I_we0),
    .X_I_d0(grp_fft_Pipeline_DFTpts_fu_112_X_I_d0),
    .X_I_q0(X_I_q0),
    .X_I_address1(grp_fft_Pipeline_DFTpts_fu_112_X_I_address1),
    .X_I_ce1(grp_fft_Pipeline_DFTpts_fu_112_X_I_ce1),
    .X_I_we1(grp_fft_Pipeline_DFTpts_fu_112_X_I_we1),
    .X_I_d1(grp_fft_Pipeline_DFTpts_fu_112_X_I_d1),
    .X_I_q1(X_I_q1),
    .s2(s2_reg_268),
    .zext_ln98(DFTpts_reg_224)
);

fft_mul_9s_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_9s_9s_9_1_1_U18(
    .din0(ret_V_fu_191_p0),
    .din1(trunc_ln98_reg_235),
    .dout(ret_V_fu_191_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fft_Pipeline_DFTpts_fu_112_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_fft_Pipeline_DFTpts_fu_112_ap_start_reg <= 1'b1;
        end else if ((grp_fft_Pipeline_DFTpts_fu_112_ap_ready == 1'b1)) begin
            grp_fft_Pipeline_DFTpts_fu_112_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fft_Pipeline_Reverse_fu_104_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_fft_Pipeline_Reverse_fu_104_ap_start_reg <= 1'b1;
        end else if ((grp_fft_Pipeline_Reverse_fu_104_ap_ready == 1'b1)) begin
            grp_fft_Pipeline_Reverse_fu_104_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_fu_136_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        j_reg_92 <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (grp_fft_Pipeline_DFTpts_fu_112_ap_done == 1'b1))) begin
        j_reg_92 <= add_ln98_reg_243;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        stage_fu_62 <= 4'd1;
    end else if (((icmp_ln98_fu_176_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        stage_fu_62 <= stage_3_fu_196_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln90_fu_136_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        DFTpts_reg_224 <= DFTpts_fu_150_p2;
        trunc_ln98_reg_235 <= trunc_ln98_fu_172_p1;
        trunc_ln_reg_229 <= {{DFTpts_fu_150_p2[10:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln98_reg_243 <= add_ln98_fu_181_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        c2_reg_263 <= W_real_q0;
        s2_reg_268 <= W_imag_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_fu_176_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ret_V_reg_248 <= ret_V_fu_191_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        W_imag_ce0 = 1'b1;
    end else begin
        W_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        W_real_ce0 = 1'b1;
    end else begin
        W_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_I_address0 = grp_fft_Pipeline_DFTpts_fu_112_X_I_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_I_address0 = grp_fft_Pipeline_Reverse_fu_104_X_I_address0;
    end else begin
        X_I_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_I_address1 = grp_fft_Pipeline_DFTpts_fu_112_X_I_address1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_I_address1 = grp_fft_Pipeline_Reverse_fu_104_X_I_address1;
    end else begin
        X_I_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_I_ce0 = grp_fft_Pipeline_DFTpts_fu_112_X_I_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_I_ce0 = grp_fft_Pipeline_Reverse_fu_104_X_I_ce0;
    end else begin
        X_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_I_ce1 = grp_fft_Pipeline_DFTpts_fu_112_X_I_ce1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_I_ce1 = grp_fft_Pipeline_Reverse_fu_104_X_I_ce1;
    end else begin
        X_I_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_I_d0 = grp_fft_Pipeline_DFTpts_fu_112_X_I_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_I_d0 = grp_fft_Pipeline_Reverse_fu_104_X_I_d0;
    end else begin
        X_I_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_I_d1 = grp_fft_Pipeline_DFTpts_fu_112_X_I_d1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_I_d1 = grp_fft_Pipeline_Reverse_fu_104_X_I_d1;
    end else begin
        X_I_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_I_we0 = grp_fft_Pipeline_DFTpts_fu_112_X_I_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_I_we0 = grp_fft_Pipeline_Reverse_fu_104_X_I_we0;
    end else begin
        X_I_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_I_we1 = grp_fft_Pipeline_DFTpts_fu_112_X_I_we1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_I_we1 = grp_fft_Pipeline_Reverse_fu_104_X_I_we1;
    end else begin
        X_I_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_R_address0 = grp_fft_Pipeline_DFTpts_fu_112_X_R_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_R_address0 = grp_fft_Pipeline_Reverse_fu_104_X_R_address0;
    end else begin
        X_R_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_R_address1 = grp_fft_Pipeline_DFTpts_fu_112_X_R_address1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_R_address1 = grp_fft_Pipeline_Reverse_fu_104_X_R_address1;
    end else begin
        X_R_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_R_ce0 = grp_fft_Pipeline_DFTpts_fu_112_X_R_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_R_ce0 = grp_fft_Pipeline_Reverse_fu_104_X_R_ce0;
    end else begin
        X_R_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_R_ce1 = grp_fft_Pipeline_DFTpts_fu_112_X_R_ce1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_R_ce1 = grp_fft_Pipeline_Reverse_fu_104_X_R_ce1;
    end else begin
        X_R_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_R_d0 = grp_fft_Pipeline_DFTpts_fu_112_X_R_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_R_d0 = grp_fft_Pipeline_Reverse_fu_104_X_R_d0;
    end else begin
        X_R_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_R_d1 = grp_fft_Pipeline_DFTpts_fu_112_X_R_d1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_R_d1 = grp_fft_Pipeline_Reverse_fu_104_X_R_d1;
    end else begin
        X_R_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_R_we0 = grp_fft_Pipeline_DFTpts_fu_112_X_R_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_R_we0 = grp_fft_Pipeline_Reverse_fu_104_X_R_we0;
    end else begin
        X_R_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        X_R_we1 = grp_fft_Pipeline_DFTpts_fu_112_X_R_we1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        X_R_we1 = grp_fft_Pipeline_Reverse_fu_104_X_R_we1;
    end else begin
        X_R_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_fft_Pipeline_Reverse_fu_104_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_fft_Pipeline_DFTpts_fu_112_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln90_fu_136_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln90_fu_136_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_fft_Pipeline_Reverse_fu_104_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln90_fu_136_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln98_fu_176_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_fft_Pipeline_DFTpts_fu_112_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DFTpts_fu_150_p2 = 11'd1 << zext_ln90_1_fu_146_p1;

assign W_imag_address0 = zext_ln1540_fu_206_p1;

assign W_real_address0 = zext_ln1540_fu_206_p1;

assign add_ln98_fu_181_p2 = (j_reg_92 + 10'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ec_V_fu_166_p2 = 19'd1024 >> zext_ln90_fu_142_p1;

assign grp_fft_Pipeline_DFTpts_fu_112_ap_start = grp_fft_Pipeline_DFTpts_fu_112_ap_start_reg;

assign grp_fft_Pipeline_Reverse_fu_104_ap_start = grp_fft_Pipeline_Reverse_fu_104_ap_start_reg;

assign icmp_ln90_fu_136_p2 = ((stage_fu_62 == 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_176_p2 = ((j_reg_92 == trunc_ln_reg_229) ? 1'b1 : 1'b0);

assign ret_V_fu_191_p0 = j_reg_92[8:0];

assign stage_3_fu_196_p2 = (stage_fu_62 + 4'd1);

assign trunc_ln98_fu_172_p1 = ec_V_fu_166_p2[8:0];

assign zext_ln1540_fu_206_p1 = ret_V_reg_248;

assign zext_ln90_1_fu_146_p1 = stage_fu_62;

assign zext_ln90_fu_142_p1 = stage_fu_62;

endmodule //fft
