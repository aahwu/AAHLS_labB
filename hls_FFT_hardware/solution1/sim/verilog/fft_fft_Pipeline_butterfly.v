// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft_fft_Pipeline_butterfly (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        OUT_R_1_address0,
        OUT_R_1_ce0,
        OUT_R_1_we0,
        OUT_R_1_d0,
        OUT_R_1_address1,
        OUT_R_1_ce1,
        OUT_R_1_we1,
        OUT_R_1_d1,
        OUT_I_1_address0,
        OUT_I_1_ce0,
        OUT_I_1_we0,
        OUT_I_1_d0,
        OUT_I_1_address1,
        OUT_I_1_ce1,
        OUT_I_1_we1,
        OUT_I_1_d1,
        Stage9_R_1_address0,
        Stage9_R_1_ce0,
        Stage9_R_1_q0,
        Stage9_R_1_address1,
        Stage9_R_1_ce1,
        Stage9_R_1_q1,
        Stage9_R_3_address0,
        Stage9_R_3_ce0,
        Stage9_R_3_q0,
        Stage9_R_3_address1,
        Stage9_R_3_ce1,
        Stage9_R_3_q1,
        Stage9_I_1_address0,
        Stage9_I_1_ce0,
        Stage9_I_1_q0,
        Stage9_I_1_address1,
        Stage9_I_1_ce1,
        Stage9_I_1_q1,
        Stage9_I_3_address0,
        Stage9_I_3_ce0,
        Stage9_I_3_q0,
        Stage9_I_3_address1,
        Stage9_I_3_ce1,
        Stage9_I_3_q1,
        OUT_R_0_address0,
        OUT_R_0_ce0,
        OUT_R_0_we0,
        OUT_R_0_d0,
        OUT_R_0_address1,
        OUT_R_0_ce1,
        OUT_R_0_we1,
        OUT_R_0_d1,
        OUT_I_0_address0,
        OUT_I_0_ce0,
        OUT_I_0_we0,
        OUT_I_0_d0,
        OUT_I_0_address1,
        OUT_I_0_ce1,
        OUT_I_0_we1,
        OUT_I_0_d1,
        Stage9_R_0_address0,
        Stage9_R_0_ce0,
        Stage9_R_0_q0,
        Stage9_R_0_address1,
        Stage9_R_0_ce1,
        Stage9_R_0_q1,
        Stage9_R_2_address0,
        Stage9_R_2_ce0,
        Stage9_R_2_q0,
        Stage9_R_2_address1,
        Stage9_R_2_ce1,
        Stage9_R_2_q1,
        Stage9_I_0_address0,
        Stage9_I_0_ce0,
        Stage9_I_0_q0,
        Stage9_I_0_address1,
        Stage9_I_0_ce1,
        Stage9_I_0_q1,
        Stage9_I_2_address0,
        Stage9_I_2_ce0,
        Stage9_I_2_q0,
        Stage9_I_2_address1,
        Stage9_I_2_ce1,
        Stage9_I_2_q1,
        OUT_R_2_address0,
        OUT_R_2_ce0,
        OUT_R_2_we0,
        OUT_R_2_d0,
        OUT_R_2_address1,
        OUT_R_2_ce1,
        OUT_R_2_we1,
        OUT_R_2_d1,
        OUT_I_2_address0,
        OUT_I_2_ce0,
        OUT_I_2_we0,
        OUT_I_2_d0,
        OUT_I_2_address1,
        OUT_I_2_ce1,
        OUT_I_2_we1,
        OUT_I_2_d1,
        OUT_R_3_address0,
        OUT_R_3_ce0,
        OUT_R_3_we0,
        OUT_R_3_d0,
        OUT_R_3_address1,
        OUT_R_3_ce1,
        OUT_R_3_we1,
        OUT_R_3_d1,
        OUT_I_3_address0,
        OUT_I_3_ce0,
        OUT_I_3_we0,
        OUT_I_3_d0,
        OUT_I_3_address1,
        OUT_I_3_ce1,
        OUT_I_3_we1,
        OUT_I_3_d1,
        W_real_address0,
        W_real_ce0,
        W_real_q0,
        W_real_address1,
        W_real_ce1,
        W_real_q1,
        W_imag_address0,
        W_imag_ce0,
        W_imag_q0,
        W_imag_address1,
        W_imag_ce1,
        W_imag_q1,
        grp_fu_519_p_din0,
        grp_fu_519_p_din1,
        grp_fu_519_p_opcode,
        grp_fu_519_p_dout0,
        grp_fu_519_p_ce,
        grp_fu_523_p_din0,
        grp_fu_523_p_din1,
        grp_fu_523_p_opcode,
        grp_fu_523_p_dout0,
        grp_fu_523_p_ce,
        grp_fu_527_p_din0,
        grp_fu_527_p_din1,
        grp_fu_527_p_opcode,
        grp_fu_527_p_dout0,
        grp_fu_527_p_ce,
        grp_fu_531_p_din0,
        grp_fu_531_p_din1,
        grp_fu_531_p_opcode,
        grp_fu_531_p_dout0,
        grp_fu_531_p_ce,
        grp_fu_535_p_din0,
        grp_fu_535_p_din1,
        grp_fu_535_p_opcode,
        grp_fu_535_p_dout0,
        grp_fu_535_p_ce,
        grp_fu_539_p_din0,
        grp_fu_539_p_din1,
        grp_fu_539_p_opcode,
        grp_fu_539_p_dout0,
        grp_fu_539_p_ce,
        grp_fu_543_p_din0,
        grp_fu_543_p_din1,
        grp_fu_543_p_opcode,
        grp_fu_543_p_dout0,
        grp_fu_543_p_ce,
        grp_fu_547_p_din0,
        grp_fu_547_p_din1,
        grp_fu_547_p_opcode,
        grp_fu_547_p_dout0,
        grp_fu_547_p_ce,
        grp_fu_551_p_din0,
        grp_fu_551_p_din1,
        grp_fu_551_p_opcode,
        grp_fu_551_p_dout0,
        grp_fu_551_p_ce,
        grp_fu_555_p_din0,
        grp_fu_555_p_din1,
        grp_fu_555_p_opcode,
        grp_fu_555_p_dout0,
        grp_fu_555_p_ce,
        grp_fu_559_p_din0,
        grp_fu_559_p_din1,
        grp_fu_559_p_opcode,
        grp_fu_559_p_dout0,
        grp_fu_559_p_ce,
        grp_fu_563_p_din0,
        grp_fu_563_p_din1,
        grp_fu_563_p_opcode,
        grp_fu_563_p_dout0,
        grp_fu_563_p_ce,
        grp_fu_567_p_din0,
        grp_fu_567_p_din1,
        grp_fu_567_p_dout0,
        grp_fu_567_p_ce,
        grp_fu_571_p_din0,
        grp_fu_571_p_din1,
        grp_fu_571_p_dout0,
        grp_fu_571_p_ce,
        grp_fu_575_p_din0,
        grp_fu_575_p_din1,
        grp_fu_575_p_dout0,
        grp_fu_575_p_ce,
        grp_fu_579_p_din0,
        grp_fu_579_p_din1,
        grp_fu_579_p_dout0,
        grp_fu_579_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] OUT_R_1_address0;
output   OUT_R_1_ce0;
output   OUT_R_1_we0;
output  [31:0] OUT_R_1_d0;
output  [7:0] OUT_R_1_address1;
output   OUT_R_1_ce1;
output   OUT_R_1_we1;
output  [31:0] OUT_R_1_d1;
output  [7:0] OUT_I_1_address0;
output   OUT_I_1_ce0;
output   OUT_I_1_we0;
output  [31:0] OUT_I_1_d0;
output  [7:0] OUT_I_1_address1;
output   OUT_I_1_ce1;
output   OUT_I_1_we1;
output  [31:0] OUT_I_1_d1;
output  [7:0] Stage9_R_1_address0;
output   Stage9_R_1_ce0;
input  [31:0] Stage9_R_1_q0;
output  [7:0] Stage9_R_1_address1;
output   Stage9_R_1_ce1;
input  [31:0] Stage9_R_1_q1;
output  [7:0] Stage9_R_3_address0;
output   Stage9_R_3_ce0;
input  [31:0] Stage9_R_3_q0;
output  [7:0] Stage9_R_3_address1;
output   Stage9_R_3_ce1;
input  [31:0] Stage9_R_3_q1;
output  [7:0] Stage9_I_1_address0;
output   Stage9_I_1_ce0;
input  [31:0] Stage9_I_1_q0;
output  [7:0] Stage9_I_1_address1;
output   Stage9_I_1_ce1;
input  [31:0] Stage9_I_1_q1;
output  [7:0] Stage9_I_3_address0;
output   Stage9_I_3_ce0;
input  [31:0] Stage9_I_3_q0;
output  [7:0] Stage9_I_3_address1;
output   Stage9_I_3_ce1;
input  [31:0] Stage9_I_3_q1;
output  [7:0] OUT_R_0_address0;
output   OUT_R_0_ce0;
output   OUT_R_0_we0;
output  [31:0] OUT_R_0_d0;
output  [7:0] OUT_R_0_address1;
output   OUT_R_0_ce1;
output   OUT_R_0_we1;
output  [31:0] OUT_R_0_d1;
output  [7:0] OUT_I_0_address0;
output   OUT_I_0_ce0;
output   OUT_I_0_we0;
output  [31:0] OUT_I_0_d0;
output  [7:0] OUT_I_0_address1;
output   OUT_I_0_ce1;
output   OUT_I_0_we1;
output  [31:0] OUT_I_0_d1;
output  [7:0] Stage9_R_0_address0;
output   Stage9_R_0_ce0;
input  [31:0] Stage9_R_0_q0;
output  [7:0] Stage9_R_0_address1;
output   Stage9_R_0_ce1;
input  [31:0] Stage9_R_0_q1;
output  [7:0] Stage9_R_2_address0;
output   Stage9_R_2_ce0;
input  [31:0] Stage9_R_2_q0;
output  [7:0] Stage9_R_2_address1;
output   Stage9_R_2_ce1;
input  [31:0] Stage9_R_2_q1;
output  [7:0] Stage9_I_0_address0;
output   Stage9_I_0_ce0;
input  [31:0] Stage9_I_0_q0;
output  [7:0] Stage9_I_0_address1;
output   Stage9_I_0_ce1;
input  [31:0] Stage9_I_0_q1;
output  [7:0] Stage9_I_2_address0;
output   Stage9_I_2_ce0;
input  [31:0] Stage9_I_2_q0;
output  [7:0] Stage9_I_2_address1;
output   Stage9_I_2_ce1;
input  [31:0] Stage9_I_2_q1;
output  [7:0] OUT_R_2_address0;
output   OUT_R_2_ce0;
output   OUT_R_2_we0;
output  [31:0] OUT_R_2_d0;
output  [7:0] OUT_R_2_address1;
output   OUT_R_2_ce1;
output   OUT_R_2_we1;
output  [31:0] OUT_R_2_d1;
output  [7:0] OUT_I_2_address0;
output   OUT_I_2_ce0;
output   OUT_I_2_we0;
output  [31:0] OUT_I_2_d0;
output  [7:0] OUT_I_2_address1;
output   OUT_I_2_ce1;
output   OUT_I_2_we1;
output  [31:0] OUT_I_2_d1;
output  [7:0] OUT_R_3_address0;
output   OUT_R_3_ce0;
output   OUT_R_3_we0;
output  [31:0] OUT_R_3_d0;
output  [7:0] OUT_R_3_address1;
output   OUT_R_3_ce1;
output   OUT_R_3_we1;
output  [31:0] OUT_R_3_d1;
output  [7:0] OUT_I_3_address0;
output   OUT_I_3_ce0;
output   OUT_I_3_we0;
output  [31:0] OUT_I_3_d0;
output  [7:0] OUT_I_3_address1;
output   OUT_I_3_ce1;
output   OUT_I_3_we1;
output  [31:0] OUT_I_3_d1;
output  [8:0] W_real_address0;
output   W_real_ce0;
input  [31:0] W_real_q0;
output  [8:0] W_real_address1;
output   W_real_ce1;
input  [31:0] W_real_q1;
output  [8:0] W_imag_address0;
output   W_imag_ce0;
input  [31:0] W_imag_q0;
output  [8:0] W_imag_address1;
output   W_imag_ce1;
input  [31:0] W_imag_q1;
output  [31:0] grp_fu_519_p_din0;
output  [31:0] grp_fu_519_p_din1;
output  [1:0] grp_fu_519_p_opcode;
input  [31:0] grp_fu_519_p_dout0;
output   grp_fu_519_p_ce;
output  [31:0] grp_fu_523_p_din0;
output  [31:0] grp_fu_523_p_din1;
output  [1:0] grp_fu_523_p_opcode;
input  [31:0] grp_fu_523_p_dout0;
output   grp_fu_523_p_ce;
output  [31:0] grp_fu_527_p_din0;
output  [31:0] grp_fu_527_p_din1;
output  [1:0] grp_fu_527_p_opcode;
input  [31:0] grp_fu_527_p_dout0;
output   grp_fu_527_p_ce;
output  [31:0] grp_fu_531_p_din0;
output  [31:0] grp_fu_531_p_din1;
output  [1:0] grp_fu_531_p_opcode;
input  [31:0] grp_fu_531_p_dout0;
output   grp_fu_531_p_ce;
output  [31:0] grp_fu_535_p_din0;
output  [31:0] grp_fu_535_p_din1;
output  [1:0] grp_fu_535_p_opcode;
input  [31:0] grp_fu_535_p_dout0;
output   grp_fu_535_p_ce;
output  [31:0] grp_fu_539_p_din0;
output  [31:0] grp_fu_539_p_din1;
output  [1:0] grp_fu_539_p_opcode;
input  [31:0] grp_fu_539_p_dout0;
output   grp_fu_539_p_ce;
output  [31:0] grp_fu_543_p_din0;
output  [31:0] grp_fu_543_p_din1;
output  [1:0] grp_fu_543_p_opcode;
input  [31:0] grp_fu_543_p_dout0;
output   grp_fu_543_p_ce;
output  [31:0] grp_fu_547_p_din0;
output  [31:0] grp_fu_547_p_din1;
output  [1:0] grp_fu_547_p_opcode;
input  [31:0] grp_fu_547_p_dout0;
output   grp_fu_547_p_ce;
output  [31:0] grp_fu_551_p_din0;
output  [31:0] grp_fu_551_p_din1;
output  [1:0] grp_fu_551_p_opcode;
input  [31:0] grp_fu_551_p_dout0;
output   grp_fu_551_p_ce;
output  [31:0] grp_fu_555_p_din0;
output  [31:0] grp_fu_555_p_din1;
output  [1:0] grp_fu_555_p_opcode;
input  [31:0] grp_fu_555_p_dout0;
output   grp_fu_555_p_ce;
output  [31:0] grp_fu_559_p_din0;
output  [31:0] grp_fu_559_p_din1;
output  [1:0] grp_fu_559_p_opcode;
input  [31:0] grp_fu_559_p_dout0;
output   grp_fu_559_p_ce;
output  [31:0] grp_fu_563_p_din0;
output  [31:0] grp_fu_563_p_din1;
output  [1:0] grp_fu_563_p_opcode;
input  [31:0] grp_fu_563_p_dout0;
output   grp_fu_563_p_ce;
output  [31:0] grp_fu_567_p_din0;
output  [31:0] grp_fu_567_p_din1;
input  [31:0] grp_fu_567_p_dout0;
output   grp_fu_567_p_ce;
output  [31:0] grp_fu_571_p_din0;
output  [31:0] grp_fu_571_p_din1;
input  [31:0] grp_fu_571_p_dout0;
output   grp_fu_571_p_ce;
output  [31:0] grp_fu_575_p_din0;
output  [31:0] grp_fu_575_p_din1;
input  [31:0] grp_fu_575_p_dout0;
output   grp_fu_575_p_ce;
output  [31:0] grp_fu_579_p_din0;
output  [31:0] grp_fu_579_p_din1;
input  [31:0] grp_fu_579_p_dout0;
output   grp_fu_579_p_ce;

reg ap_idle;
reg OUT_R_1_ce0;
reg OUT_R_1_we0;
reg OUT_R_1_ce1;
reg OUT_R_1_we1;
reg OUT_I_1_ce0;
reg OUT_I_1_we0;
reg OUT_I_1_ce1;
reg OUT_I_1_we1;
reg Stage9_R_1_ce0;
reg Stage9_R_1_ce1;
reg Stage9_R_3_ce0;
reg Stage9_R_3_ce1;
reg Stage9_I_1_ce0;
reg Stage9_I_1_ce1;
reg Stage9_I_3_ce0;
reg Stage9_I_3_ce1;
reg OUT_R_0_ce0;
reg OUT_R_0_we0;
reg OUT_R_0_ce1;
reg OUT_R_0_we1;
reg OUT_I_0_ce0;
reg OUT_I_0_we0;
reg OUT_I_0_ce1;
reg OUT_I_0_we1;
reg Stage9_R_0_ce0;
reg Stage9_R_0_ce1;
reg Stage9_R_2_ce0;
reg Stage9_R_2_ce1;
reg Stage9_I_0_ce0;
reg Stage9_I_0_ce1;
reg Stage9_I_2_ce0;
reg Stage9_I_2_ce1;
reg OUT_R_2_ce0;
reg OUT_R_2_we0;
reg OUT_R_2_ce1;
reg OUT_R_2_we1;
reg OUT_I_2_ce0;
reg OUT_I_2_we0;
reg OUT_I_2_ce1;
reg OUT_I_2_we1;
reg OUT_R_3_ce0;
reg OUT_R_3_we0;
reg OUT_R_3_ce1;
reg OUT_R_3_we1;
reg OUT_I_3_ce0;
reg OUT_I_3_we0;
reg OUT_I_3_ce1;
reg OUT_I_3_we1;
reg W_real_ce0;
reg W_real_ce1;
reg W_imag_ce0;
reg W_imag_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_fu_707_p3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_650_p5;
reg   [31:0] reg_672;
reg   [0:0] tmp_reg_952;
reg   [0:0] tmp_reg_952_pp0_iter9_reg;
reg   [0:0] icmp_ln214_reg_1020;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter9_reg;
wire   [31:0] grp_fu_661_p5;
reg   [31:0] reg_679;
reg   [31:0] reg_686;
reg   [0:0] tmp_reg_952_pp0_iter14_reg;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter14_reg;
reg   [31:0] reg_690;
reg   [0:0] tmp_reg_952_pp0_iter1_reg;
reg   [0:0] tmp_reg_952_pp0_iter2_reg;
reg   [0:0] tmp_reg_952_pp0_iter3_reg;
reg   [0:0] tmp_reg_952_pp0_iter4_reg;
reg   [0:0] tmp_reg_952_pp0_iter5_reg;
reg   [0:0] tmp_reg_952_pp0_iter6_reg;
reg   [0:0] tmp_reg_952_pp0_iter7_reg;
reg   [0:0] tmp_reg_952_pp0_iter8_reg;
reg   [0:0] tmp_reg_952_pp0_iter10_reg;
reg   [0:0] tmp_reg_952_pp0_iter11_reg;
reg   [0:0] tmp_reg_952_pp0_iter12_reg;
reg   [0:0] tmp_reg_952_pp0_iter13_reg;
reg   [0:0] tmp_reg_952_pp0_iter15_reg;
wire   [1:0] empty_17_fu_728_p1;
reg   [1:0] empty_17_reg_956;
reg   [1:0] empty_17_reg_956_pp0_iter1_reg;
reg   [1:0] empty_17_reg_956_pp0_iter2_reg;
reg   [1:0] empty_17_reg_956_pp0_iter3_reg;
reg   [1:0] empty_17_reg_956_pp0_iter4_reg;
reg   [1:0] empty_17_reg_956_pp0_iter5_reg;
reg   [1:0] empty_17_reg_956_pp0_iter6_reg;
reg   [1:0] empty_17_reg_956_pp0_iter7_reg;
reg   [1:0] empty_17_reg_956_pp0_iter8_reg;
reg   [1:0] empty_17_reg_956_pp0_iter9_reg;
wire   [1:0] empty_18_fu_732_p1;
reg   [1:0] empty_18_reg_965;
wire   [63:0] zext_ln211_fu_746_p1;
reg   [63:0] zext_ln211_reg_983;
reg   [63:0] zext_ln211_reg_983_pp0_iter1_reg;
reg   [63:0] zext_ln211_reg_983_pp0_iter2_reg;
reg   [63:0] zext_ln211_reg_983_pp0_iter3_reg;
reg   [63:0] zext_ln211_reg_983_pp0_iter4_reg;
reg   [63:0] zext_ln211_reg_983_pp0_iter5_reg;
reg   [63:0] zext_ln211_reg_983_pp0_iter6_reg;
reg   [63:0] zext_ln211_reg_983_pp0_iter7_reg;
reg   [63:0] zext_ln211_reg_983_pp0_iter8_reg;
reg   [63:0] zext_ln211_reg_983_pp0_iter9_reg;
reg   [63:0] zext_ln211_reg_983_pp0_iter10_reg;
reg   [63:0] zext_ln211_reg_983_pp0_iter11_reg;
reg   [63:0] zext_ln211_reg_983_pp0_iter12_reg;
reg   [63:0] zext_ln211_reg_983_pp0_iter13_reg;
reg   [63:0] zext_ln211_reg_983_pp0_iter14_reg;
reg   [63:0] zext_ln211_reg_983_pp0_iter15_reg;
reg   [6:0] lshr_ln4_reg_1015;
reg   [6:0] lshr_ln4_reg_1015_pp0_iter1_reg;
reg   [6:0] lshr_ln4_reg_1015_pp0_iter2_reg;
reg   [6:0] lshr_ln4_reg_1015_pp0_iter3_reg;
reg   [6:0] lshr_ln4_reg_1015_pp0_iter4_reg;
reg   [6:0] lshr_ln4_reg_1015_pp0_iter5_reg;
reg   [6:0] lshr_ln4_reg_1015_pp0_iter6_reg;
reg   [6:0] lshr_ln4_reg_1015_pp0_iter7_reg;
reg   [6:0] lshr_ln4_reg_1015_pp0_iter8_reg;
wire   [0:0] icmp_ln214_fu_768_p2;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter1_reg;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter2_reg;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter3_reg;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter4_reg;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter5_reg;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter6_reg;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter7_reg;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter8_reg;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter10_reg;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter11_reg;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter12_reg;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter13_reg;
reg   [0:0] icmp_ln214_reg_1020_pp0_iter15_reg;
reg   [31:0] c2_reg_1054;
reg   [31:0] s2_reg_1060;
wire   [31:0] tmp_3_fu_811_p5;
reg   [31:0] tmp_3_reg_1066;
wire   [31:0] tmp_2_fu_822_p5;
reg   [31:0] tmp_2_reg_1072;
reg   [31:0] c2_1_reg_1078;
reg   [31:0] s2_1_reg_1084;
wire   [31:0] tmp_8_fu_833_p5;
reg   [31:0] tmp_8_reg_1090;
wire   [31:0] tmp_9_fu_844_p5;
reg   [31:0] tmp_9_reg_1096;
reg   [31:0] mul_i_reg_1102;
reg   [31:0] mul7_i_reg_1107;
reg   [31:0] mul10_i_reg_1112;
reg   [31:0] mul13_i_reg_1117;
wire   [31:0] grp_fu_634_p2;
reg   [31:0] mul_1_i_reg_1122;
wire   [31:0] grp_fu_638_p2;
reg   [31:0] mul7_1_i_reg_1127;
wire   [31:0] grp_fu_642_p2;
reg   [31:0] mul10_1_i_reg_1132;
wire   [31:0] grp_fu_646_p2;
reg   [31:0] mul13_1_i_reg_1137;
wire   [63:0] zext_ln214_fu_855_p1;
reg   [63:0] zext_ln214_reg_1142;
reg   [63:0] zext_ln214_reg_1142_pp0_iter10_reg;
reg   [63:0] zext_ln214_reg_1142_pp0_iter11_reg;
reg   [63:0] zext_ln214_reg_1142_pp0_iter12_reg;
reg   [63:0] zext_ln214_reg_1142_pp0_iter13_reg;
reg   [63:0] zext_ln214_reg_1142_pp0_iter14_reg;
reg   [63:0] zext_ln214_reg_1142_pp0_iter15_reg;
reg   [31:0] temp_R_reg_1194;
reg   [31:0] temp_I_reg_1200;
wire   [31:0] tmp_5_fu_866_p5;
reg   [31:0] tmp_5_reg_1206;
wire   [0:0] icmp_ln216_fu_877_p2;
reg   [0:0] icmp_ln216_reg_1212;
reg   [0:0] icmp_ln216_reg_1212_pp0_iter11_reg;
reg   [0:0] icmp_ln216_reg_1212_pp0_iter12_reg;
reg   [0:0] icmp_ln216_reg_1212_pp0_iter13_reg;
reg   [0:0] icmp_ln216_reg_1212_pp0_iter14_reg;
reg   [0:0] icmp_ln216_reg_1212_pp0_iter15_reg;
reg   [31:0] temp_R_1_reg_1216;
reg   [31:0] temp_I_1_reg_1222;
wire   [31:0] tmp_s_fu_882_p5;
reg   [31:0] tmp_s_reg_1228;
wire   [31:0] bitcast_ln214_fu_893_p1;
reg   [31:0] bitcast_ln214_reg_1234;
wire   [31:0] bitcast_ln216_fu_897_p1;
reg   [31:0] bitcast_ln216_reg_1240;
wire   [31:0] bitcast_ln217_fu_901_p1;
reg   [31:0] bitcast_ln217_reg_1246;
wire   [31:0] bitcast_ln214_1_fu_905_p1;
reg   [31:0] bitcast_ln214_1_reg_1252;
wire   [31:0] bitcast_ln216_1_fu_909_p1;
reg   [31:0] bitcast_ln216_1_reg_1258;
wire   [31:0] bitcast_ln217_1_fu_913_p1;
reg   [31:0] bitcast_ln217_1_reg_1264;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_15_reg_548;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_15_reg_548;
reg   [31:0] ap_phi_reg_pp0_iter2_empty_15_reg_548;
reg   [31:0] ap_phi_reg_pp0_iter3_empty_15_reg_548;
reg   [31:0] ap_phi_reg_pp0_iter4_empty_15_reg_548;
reg   [31:0] ap_phi_reg_pp0_iter5_empty_15_reg_548;
reg   [31:0] ap_phi_reg_pp0_iter6_empty_15_reg_548;
reg   [31:0] ap_phi_reg_pp0_iter7_empty_15_reg_548;
reg   [31:0] ap_phi_reg_pp0_iter8_empty_15_reg_548;
reg   [31:0] ap_phi_reg_pp0_iter9_empty_15_reg_548;
reg   [31:0] ap_phi_reg_pp0_iter10_empty_15_reg_548;
reg   [31:0] ap_phi_reg_pp0_iter11_empty_15_reg_548;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_14_reg_558;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_14_reg_558;
reg   [31:0] ap_phi_reg_pp0_iter2_empty_14_reg_558;
reg   [31:0] ap_phi_reg_pp0_iter3_empty_14_reg_558;
reg   [31:0] ap_phi_reg_pp0_iter4_empty_14_reg_558;
reg   [31:0] ap_phi_reg_pp0_iter5_empty_14_reg_558;
reg   [31:0] ap_phi_reg_pp0_iter6_empty_14_reg_558;
reg   [31:0] ap_phi_reg_pp0_iter7_empty_14_reg_558;
reg   [31:0] ap_phi_reg_pp0_iter8_empty_14_reg_558;
reg   [31:0] ap_phi_reg_pp0_iter9_empty_14_reg_558;
reg   [31:0] ap_phi_reg_pp0_iter10_empty_14_reg_558;
reg   [31:0] ap_phi_reg_pp0_iter11_empty_14_reg_558;
wire   [63:0] i_4_cast26_fu_722_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln208_fu_780_p1;
reg   [10:0] j_fu_90;
wire   [10:0] add_ln219_fu_789_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_j_load;
reg   [10:0] ap_sig_allocacmp_j_load_1;
reg   [9:0] i_fu_94;
wire   [9:0] add_ln205_fu_795_p2;
reg   [9:0] ap_sig_allocacmp_i_4;
wire   [7:0] lshr_ln3_fu_736_p4;
wire   [8:0] empty_16_fu_718_p1;
wire   [8:0] or_ln205_fu_774_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op255_store_state17;
reg    ap_enable_operation_255;
reg    ap_enable_state17_pp0_iter16_stage0;
reg    ap_enable_operation_265;
reg    ap_predicate_op258_store_state17;
reg    ap_enable_operation_258;
reg    ap_enable_operation_267;
reg    ap_predicate_op260_store_state17;
reg    ap_enable_operation_260;
reg    ap_enable_operation_270;
reg    ap_predicate_op263_store_state17;
reg    ap_enable_operation_263;
reg    ap_enable_operation_272;
reg    ap_predicate_op275_store_state17;
reg    ap_enable_operation_275;
reg    ap_enable_operation_285;
reg    ap_predicate_op278_store_state17;
reg    ap_enable_operation_278;
reg    ap_enable_operation_287;
reg    ap_predicate_op280_store_state17;
reg    ap_enable_operation_280;
reg    ap_enable_operation_290;
reg    ap_predicate_op283_store_state17;
reg    ap_enable_operation_283;
reg    ap_enable_operation_292;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U126(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_reg_1090),
    .din1(c2_1_reg_1078),
    .ce(1'b1),
    .dout(grp_fu_634_p2)
);

fft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U127(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_reg_1096),
    .din1(s2_1_reg_1084),
    .ce(1'b1),
    .dout(grp_fu_638_p2)
);

fft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U128(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_reg_1096),
    .din1(c2_1_reg_1078),
    .ce(1'b1),
    .dout(grp_fu_642_p2)
);

fft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U129(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_reg_1090),
    .din1(s2_1_reg_1084),
    .ce(1'b1),
    .dout(grp_fu_646_p2)
);

fft_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U130(
    .din0(Stage9_I_0_q0),
    .din1(32'd0),
    .din2(Stage9_I_2_q0),
    .din3(empty_17_reg_956_pp0_iter9_reg),
    .dout(grp_fu_650_p5)
);

fft_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U131(
    .din0(Stage9_I_1_q0),
    .din1(32'd0),
    .din2(Stage9_I_3_q0),
    .din3(empty_17_reg_956_pp0_iter9_reg),
    .dout(grp_fu_661_p5)
);

fft_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U132(
    .din0(Stage9_R_0_q1),
    .din1(32'd0),
    .din2(Stage9_R_2_q1),
    .din3(empty_18_reg_965),
    .dout(tmp_3_fu_811_p5)
);

fft_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U133(
    .din0(Stage9_I_0_q1),
    .din1(32'd0),
    .din2(Stage9_I_2_q1),
    .din3(empty_18_reg_965),
    .dout(tmp_2_fu_822_p5)
);

fft_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U134(
    .din0(Stage9_R_1_q1),
    .din1(32'd0),
    .din2(Stage9_R_3_q1),
    .din3(empty_18_reg_965),
    .dout(tmp_8_fu_833_p5)
);

fft_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U135(
    .din0(Stage9_I_1_q1),
    .din1(32'd0),
    .din2(Stage9_I_3_q1),
    .din3(empty_18_reg_965),
    .dout(tmp_9_fu_844_p5)
);

fft_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U136(
    .din0(Stage9_R_0_q0),
    .din1(32'd0),
    .din2(Stage9_R_2_q0),
    .din3(empty_17_reg_956_pp0_iter9_reg),
    .dout(tmp_5_fu_866_p5)
);

fft_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U137(
    .din0(Stage9_R_1_q0),
    .din1(32'd0),
    .din2(Stage9_R_3_q0),
    .din3(empty_17_reg_956_pp0_iter9_reg),
    .dout(tmp_s_fu_882_p5)
);

fft_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter9_reg == 1'd1) & (tmp_reg_952_pp0_iter9_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter9_reg == 1'd0) & (tmp_reg_952_pp0_iter9_reg == 1'd0)))) begin
        ap_phi_reg_pp0_iter11_empty_14_reg_558 <= grp_fu_661_p5;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        ap_phi_reg_pp0_iter11_empty_14_reg_558 <= ap_phi_reg_pp0_iter10_empty_14_reg_558;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter9_reg == 1'd1) & (tmp_reg_952_pp0_iter9_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter9_reg == 1'd0) & (tmp_reg_952_pp0_iter9_reg == 1'd0)))) begin
        ap_phi_reg_pp0_iter11_empty_15_reg_548 <= grp_fu_650_p5;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        ap_phi_reg_pp0_iter11_empty_15_reg_548 <= ap_phi_reg_pp0_iter10_empty_15_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((tmp_fu_707_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_94 <= add_ln205_fu_795_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_94 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((tmp_fu_707_p3 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_90 <= add_ln219_fu_789_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_90 <= 11'd512;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        bitcast_ln216_1_reg_1258 <= bitcast_ln216_1_fu_909_p1;
        bitcast_ln216_reg_1240 <= bitcast_ln216_fu_897_p1;
        bitcast_ln217_1_reg_1264 <= bitcast_ln217_1_fu_913_p1;
        bitcast_ln217_reg_1246 <= bitcast_ln217_fu_901_p1;
        empty_17_reg_956_pp0_iter2_reg <= empty_17_reg_956_pp0_iter1_reg;
        empty_17_reg_956_pp0_iter3_reg <= empty_17_reg_956_pp0_iter2_reg;
        empty_17_reg_956_pp0_iter4_reg <= empty_17_reg_956_pp0_iter3_reg;
        empty_17_reg_956_pp0_iter5_reg <= empty_17_reg_956_pp0_iter4_reg;
        empty_17_reg_956_pp0_iter6_reg <= empty_17_reg_956_pp0_iter5_reg;
        empty_17_reg_956_pp0_iter7_reg <= empty_17_reg_956_pp0_iter6_reg;
        empty_17_reg_956_pp0_iter8_reg <= empty_17_reg_956_pp0_iter7_reg;
        empty_17_reg_956_pp0_iter9_reg <= empty_17_reg_956_pp0_iter8_reg;
        icmp_ln214_reg_1020_pp0_iter10_reg <= icmp_ln214_reg_1020_pp0_iter9_reg;
        icmp_ln214_reg_1020_pp0_iter11_reg <= icmp_ln214_reg_1020_pp0_iter10_reg;
        icmp_ln214_reg_1020_pp0_iter12_reg <= icmp_ln214_reg_1020_pp0_iter11_reg;
        icmp_ln214_reg_1020_pp0_iter13_reg <= icmp_ln214_reg_1020_pp0_iter12_reg;
        icmp_ln214_reg_1020_pp0_iter14_reg <= icmp_ln214_reg_1020_pp0_iter13_reg;
        icmp_ln214_reg_1020_pp0_iter15_reg <= icmp_ln214_reg_1020_pp0_iter14_reg;
        icmp_ln214_reg_1020_pp0_iter2_reg <= icmp_ln214_reg_1020_pp0_iter1_reg;
        icmp_ln214_reg_1020_pp0_iter3_reg <= icmp_ln214_reg_1020_pp0_iter2_reg;
        icmp_ln214_reg_1020_pp0_iter4_reg <= icmp_ln214_reg_1020_pp0_iter3_reg;
        icmp_ln214_reg_1020_pp0_iter5_reg <= icmp_ln214_reg_1020_pp0_iter4_reg;
        icmp_ln214_reg_1020_pp0_iter6_reg <= icmp_ln214_reg_1020_pp0_iter5_reg;
        icmp_ln214_reg_1020_pp0_iter7_reg <= icmp_ln214_reg_1020_pp0_iter6_reg;
        icmp_ln214_reg_1020_pp0_iter8_reg <= icmp_ln214_reg_1020_pp0_iter7_reg;
        icmp_ln214_reg_1020_pp0_iter9_reg <= icmp_ln214_reg_1020_pp0_iter8_reg;
        icmp_ln216_reg_1212 <= icmp_ln216_fu_877_p2;
        icmp_ln216_reg_1212_pp0_iter11_reg <= icmp_ln216_reg_1212;
        icmp_ln216_reg_1212_pp0_iter12_reg <= icmp_ln216_reg_1212_pp0_iter11_reg;
        icmp_ln216_reg_1212_pp0_iter13_reg <= icmp_ln216_reg_1212_pp0_iter12_reg;
        icmp_ln216_reg_1212_pp0_iter14_reg <= icmp_ln216_reg_1212_pp0_iter13_reg;
        icmp_ln216_reg_1212_pp0_iter15_reg <= icmp_ln216_reg_1212_pp0_iter14_reg;
        lshr_ln4_reg_1015_pp0_iter2_reg <= lshr_ln4_reg_1015_pp0_iter1_reg;
        lshr_ln4_reg_1015_pp0_iter3_reg <= lshr_ln4_reg_1015_pp0_iter2_reg;
        lshr_ln4_reg_1015_pp0_iter4_reg <= lshr_ln4_reg_1015_pp0_iter3_reg;
        lshr_ln4_reg_1015_pp0_iter5_reg <= lshr_ln4_reg_1015_pp0_iter4_reg;
        lshr_ln4_reg_1015_pp0_iter6_reg <= lshr_ln4_reg_1015_pp0_iter5_reg;
        lshr_ln4_reg_1015_pp0_iter7_reg <= lshr_ln4_reg_1015_pp0_iter6_reg;
        lshr_ln4_reg_1015_pp0_iter8_reg <= lshr_ln4_reg_1015_pp0_iter7_reg;
        tmp_reg_952_pp0_iter10_reg <= tmp_reg_952_pp0_iter9_reg;
        tmp_reg_952_pp0_iter11_reg <= tmp_reg_952_pp0_iter10_reg;
        tmp_reg_952_pp0_iter12_reg <= tmp_reg_952_pp0_iter11_reg;
        tmp_reg_952_pp0_iter13_reg <= tmp_reg_952_pp0_iter12_reg;
        tmp_reg_952_pp0_iter14_reg <= tmp_reg_952_pp0_iter13_reg;
        tmp_reg_952_pp0_iter15_reg <= tmp_reg_952_pp0_iter14_reg;
        tmp_reg_952_pp0_iter2_reg <= tmp_reg_952_pp0_iter1_reg;
        tmp_reg_952_pp0_iter3_reg <= tmp_reg_952_pp0_iter2_reg;
        tmp_reg_952_pp0_iter4_reg <= tmp_reg_952_pp0_iter3_reg;
        tmp_reg_952_pp0_iter5_reg <= tmp_reg_952_pp0_iter4_reg;
        tmp_reg_952_pp0_iter6_reg <= tmp_reg_952_pp0_iter5_reg;
        tmp_reg_952_pp0_iter7_reg <= tmp_reg_952_pp0_iter6_reg;
        tmp_reg_952_pp0_iter8_reg <= tmp_reg_952_pp0_iter7_reg;
        tmp_reg_952_pp0_iter9_reg <= tmp_reg_952_pp0_iter8_reg;
        zext_ln211_reg_983_pp0_iter10_reg[7 : 0] <= zext_ln211_reg_983_pp0_iter9_reg[7 : 0];
        zext_ln211_reg_983_pp0_iter11_reg[7 : 0] <= zext_ln211_reg_983_pp0_iter10_reg[7 : 0];
        zext_ln211_reg_983_pp0_iter12_reg[7 : 0] <= zext_ln211_reg_983_pp0_iter11_reg[7 : 0];
        zext_ln211_reg_983_pp0_iter13_reg[7 : 0] <= zext_ln211_reg_983_pp0_iter12_reg[7 : 0];
        zext_ln211_reg_983_pp0_iter14_reg[7 : 0] <= zext_ln211_reg_983_pp0_iter13_reg[7 : 0];
        zext_ln211_reg_983_pp0_iter15_reg[7 : 0] <= zext_ln211_reg_983_pp0_iter14_reg[7 : 0];
        zext_ln211_reg_983_pp0_iter2_reg[7 : 0] <= zext_ln211_reg_983_pp0_iter1_reg[7 : 0];
        zext_ln211_reg_983_pp0_iter3_reg[7 : 0] <= zext_ln211_reg_983_pp0_iter2_reg[7 : 0];
        zext_ln211_reg_983_pp0_iter4_reg[7 : 0] <= zext_ln211_reg_983_pp0_iter3_reg[7 : 0];
        zext_ln211_reg_983_pp0_iter5_reg[7 : 0] <= zext_ln211_reg_983_pp0_iter4_reg[7 : 0];
        zext_ln211_reg_983_pp0_iter6_reg[7 : 0] <= zext_ln211_reg_983_pp0_iter5_reg[7 : 0];
        zext_ln211_reg_983_pp0_iter7_reg[7 : 0] <= zext_ln211_reg_983_pp0_iter6_reg[7 : 0];
        zext_ln211_reg_983_pp0_iter8_reg[7 : 0] <= zext_ln211_reg_983_pp0_iter7_reg[7 : 0];
        zext_ln211_reg_983_pp0_iter9_reg[7 : 0] <= zext_ln211_reg_983_pp0_iter8_reg[7 : 0];
        zext_ln214_reg_1142_pp0_iter10_reg[6 : 0] <= zext_ln214_reg_1142[6 : 0];
        zext_ln214_reg_1142_pp0_iter11_reg[6 : 0] <= zext_ln214_reg_1142_pp0_iter10_reg[6 : 0];
        zext_ln214_reg_1142_pp0_iter12_reg[6 : 0] <= zext_ln214_reg_1142_pp0_iter11_reg[6 : 0];
        zext_ln214_reg_1142_pp0_iter13_reg[6 : 0] <= zext_ln214_reg_1142_pp0_iter12_reg[6 : 0];
        zext_ln214_reg_1142_pp0_iter14_reg[6 : 0] <= zext_ln214_reg_1142_pp0_iter13_reg[6 : 0];
        zext_ln214_reg_1142_pp0_iter15_reg[6 : 0] <= zext_ln214_reg_1142_pp0_iter14_reg[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_17_reg_956_pp0_iter1_reg <= empty_17_reg_956;
        icmp_ln214_reg_1020_pp0_iter1_reg <= icmp_ln214_reg_1020;
        lshr_ln4_reg_1015_pp0_iter1_reg <= lshr_ln4_reg_1015;
        tmp_reg_952 <= ap_sig_allocacmp_i_4[32'd9];
        tmp_reg_952_pp0_iter1_reg <= tmp_reg_952;
        zext_ln211_reg_983_pp0_iter1_reg[7 : 0] <= zext_ln211_reg_983[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        ap_phi_reg_pp0_iter10_empty_14_reg_558 <= ap_phi_reg_pp0_iter9_empty_14_reg_558;
        ap_phi_reg_pp0_iter10_empty_15_reg_548 <= ap_phi_reg_pp0_iter9_empty_15_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_empty_14_reg_558 <= ap_phi_reg_pp0_iter0_empty_14_reg_558;
        ap_phi_reg_pp0_iter1_empty_15_reg_548 <= ap_phi_reg_pp0_iter0_empty_15_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_empty_14_reg_558 <= ap_phi_reg_pp0_iter1_empty_14_reg_558;
        ap_phi_reg_pp0_iter2_empty_15_reg_548 <= ap_phi_reg_pp0_iter1_empty_15_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_empty_14_reg_558 <= ap_phi_reg_pp0_iter2_empty_14_reg_558;
        ap_phi_reg_pp0_iter3_empty_15_reg_548 <= ap_phi_reg_pp0_iter2_empty_15_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_empty_14_reg_558 <= ap_phi_reg_pp0_iter3_empty_14_reg_558;
        ap_phi_reg_pp0_iter4_empty_15_reg_548 <= ap_phi_reg_pp0_iter3_empty_15_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_reg_pp0_iter5_empty_14_reg_558 <= ap_phi_reg_pp0_iter4_empty_14_reg_558;
        ap_phi_reg_pp0_iter5_empty_15_reg_548 <= ap_phi_reg_pp0_iter4_empty_15_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_phi_reg_pp0_iter6_empty_14_reg_558 <= ap_phi_reg_pp0_iter5_empty_14_reg_558;
        ap_phi_reg_pp0_iter6_empty_15_reg_548 <= ap_phi_reg_pp0_iter5_empty_15_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_phi_reg_pp0_iter7_empty_14_reg_558 <= ap_phi_reg_pp0_iter6_empty_14_reg_558;
        ap_phi_reg_pp0_iter7_empty_15_reg_548 <= ap_phi_reg_pp0_iter6_empty_15_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        ap_phi_reg_pp0_iter8_empty_14_reg_558 <= ap_phi_reg_pp0_iter7_empty_14_reg_558;
        ap_phi_reg_pp0_iter8_empty_15_reg_548 <= ap_phi_reg_pp0_iter7_empty_15_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_phi_reg_pp0_iter9_empty_14_reg_558 <= ap_phi_reg_pp0_iter8_empty_14_reg_558;
        ap_phi_reg_pp0_iter9_empty_15_reg_548 <= ap_phi_reg_pp0_iter8_empty_15_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_952_pp0_iter14_reg == 1'd0))) begin
        bitcast_ln214_1_reg_1252 <= bitcast_ln214_1_fu_905_p1;
        bitcast_ln214_reg_1234 <= bitcast_ln214_fu_893_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_952 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c2_1_reg_1078 <= W_real_q0;
        c2_reg_1054 <= W_real_q1;
        s2_1_reg_1084 <= W_imag_q0;
        s2_reg_1060 <= W_imag_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_707_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_17_reg_956 <= empty_17_fu_728_p1;
        empty_18_reg_965 <= empty_18_fu_732_p1;
        icmp_ln214_reg_1020 <= icmp_ln214_fu_768_p2;
        lshr_ln4_reg_1015 <= {{ap_sig_allocacmp_i_4[8:2]}};
        zext_ln211_reg_983[7 : 0] <= zext_ln211_fu_746_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_952_pp0_iter4_reg == 1'd0))) begin
        mul10_1_i_reg_1132 <= grp_fu_642_p2;
        mul10_i_reg_1112 <= grp_fu_575_p_dout0;
        mul13_1_i_reg_1137 <= grp_fu_646_p2;
        mul13_i_reg_1117 <= grp_fu_579_p_dout0;
        mul7_1_i_reg_1127 <= grp_fu_638_p2;
        mul7_i_reg_1107 <= grp_fu_571_p_dout0;
        mul_1_i_reg_1122 <= grp_fu_634_p2;
        mul_i_reg_1102 <= grp_fu_567_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter9_reg == 1'd1) & (tmp_reg_952_pp0_iter9_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter9_reg == 1'd0) & (tmp_reg_952_pp0_iter9_reg == 1'd0)))) begin
        reg_672 <= grp_fu_650_p5;
        reg_679 <= grp_fu_661_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter14_reg == 1'd1) & (tmp_reg_952_pp0_iter14_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter14_reg == 1'd0) & (tmp_reg_952_pp0_iter14_reg == 1'd0)))) begin
        reg_686 <= grp_fu_539_p_dout0;
        reg_690 <= grp_fu_555_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_952_pp0_iter9_reg == 1'd0))) begin
        temp_I_1_reg_1222 <= grp_fu_531_p_dout0;
        temp_I_reg_1200 <= grp_fu_523_p_dout0;
        temp_R_1_reg_1216 <= grp_fu_527_p_dout0;
        temp_R_reg_1194 <= grp_fu_519_p_dout0;
        tmp_5_reg_1206 <= tmp_5_fu_866_p5;
        tmp_s_reg_1228 <= tmp_s_fu_882_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_952 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_2_reg_1072 <= tmp_2_fu_822_p5;
        tmp_3_reg_1066 <= tmp_3_fu_811_p5;
        tmp_8_reg_1090 <= tmp_8_fu_833_p5;
        tmp_9_reg_1096 <= tmp_9_fu_844_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_952_pp0_iter8_reg == 1'd0))) begin
        zext_ln214_reg_1142[6 : 0] <= zext_ln214_fu_855_p1[6 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_0_ce0 = 1'b1;
    end else begin
        OUT_I_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_0_ce1 = 1'b1;
    end else begin
        OUT_I_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd1))) begin
        OUT_I_0_we0 = 1'b1;
    end else begin
        OUT_I_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter15_reg == 1'd1) & (tmp_reg_952_pp0_iter15_reg == 1'd0))) begin
        OUT_I_0_we1 = 1'b1;
    end else begin
        OUT_I_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_1_ce0 = 1'b1;
    end else begin
        OUT_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_1_ce1 = 1'b1;
    end else begin
        OUT_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd1))) begin
        OUT_I_1_we0 = 1'b1;
    end else begin
        OUT_I_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter15_reg == 1'd1) & (tmp_reg_952_pp0_iter15_reg == 1'd0))) begin
        OUT_I_1_we1 = 1'b1;
    end else begin
        OUT_I_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_2_ce0 = 1'b1;
    end else begin
        OUT_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_2_ce1 = 1'b1;
    end else begin
        OUT_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd0))) begin
        OUT_I_2_we0 = 1'b1;
    end else begin
        OUT_I_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter15_reg == 1'd0) & (tmp_reg_952_pp0_iter15_reg == 1'd0))) begin
        OUT_I_2_we1 = 1'b1;
    end else begin
        OUT_I_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_3_ce0 = 1'b1;
    end else begin
        OUT_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_I_3_ce1 = 1'b1;
    end else begin
        OUT_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd0))) begin
        OUT_I_3_we0 = 1'b1;
    end else begin
        OUT_I_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter15_reg == 1'd0) & (tmp_reg_952_pp0_iter15_reg == 1'd0))) begin
        OUT_I_3_we1 = 1'b1;
    end else begin
        OUT_I_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_0_ce0 = 1'b1;
    end else begin
        OUT_R_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_0_ce1 = 1'b1;
    end else begin
        OUT_R_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd1))) begin
        OUT_R_0_we0 = 1'b1;
    end else begin
        OUT_R_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter15_reg == 1'd1) & (tmp_reg_952_pp0_iter15_reg == 1'd0))) begin
        OUT_R_0_we1 = 1'b1;
    end else begin
        OUT_R_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_1_ce0 = 1'b1;
    end else begin
        OUT_R_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_1_ce1 = 1'b1;
    end else begin
        OUT_R_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd1))) begin
        OUT_R_1_we0 = 1'b1;
    end else begin
        OUT_R_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter15_reg == 1'd1) & (tmp_reg_952_pp0_iter15_reg == 1'd0))) begin
        OUT_R_1_we1 = 1'b1;
    end else begin
        OUT_R_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_2_ce0 = 1'b1;
    end else begin
        OUT_R_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_2_ce1 = 1'b1;
    end else begin
        OUT_R_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd0))) begin
        OUT_R_2_we0 = 1'b1;
    end else begin
        OUT_R_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter15_reg == 1'd0) & (tmp_reg_952_pp0_iter15_reg == 1'd0))) begin
        OUT_R_2_we1 = 1'b1;
    end else begin
        OUT_R_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_3_ce0 = 1'b1;
    end else begin
        OUT_R_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        OUT_R_3_ce1 = 1'b1;
    end else begin
        OUT_R_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd0))) begin
        OUT_R_3_we0 = 1'b1;
    end else begin
        OUT_R_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter16 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter15_reg == 1'd0) & (tmp_reg_952_pp0_iter15_reg == 1'd0))) begin
        OUT_R_3_we1 = 1'b1;
    end else begin
        OUT_R_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter8_reg == 1'd1) & (tmp_reg_952_pp0_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter8_reg == 1'd0) & (tmp_reg_952_pp0_iter8_reg == 1'd0)))) begin
        Stage9_I_0_ce0 = 1'b1;
    end else begin
        Stage9_I_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_I_0_ce1 = 1'b1;
    end else begin
        Stage9_I_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter8_reg == 1'd1) & (tmp_reg_952_pp0_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter8_reg == 1'd0) & (tmp_reg_952_pp0_iter8_reg == 1'd0)))) begin
        Stage9_I_1_ce0 = 1'b1;
    end else begin
        Stage9_I_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_I_1_ce1 = 1'b1;
    end else begin
        Stage9_I_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter8_reg == 1'd1) & (tmp_reg_952_pp0_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter8_reg == 1'd0) & (tmp_reg_952_pp0_iter8_reg == 1'd0)))) begin
        Stage9_I_2_ce0 = 1'b1;
    end else begin
        Stage9_I_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_I_2_ce1 = 1'b1;
    end else begin
        Stage9_I_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter8_reg == 1'd1) & (tmp_reg_952_pp0_iter8_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln214_reg_1020_pp0_iter8_reg == 1'd0) & (tmp_reg_952_pp0_iter8_reg == 1'd0)))) begin
        Stage9_I_3_ce0 = 1'b1;
    end else begin
        Stage9_I_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_I_3_ce1 = 1'b1;
    end else begin
        Stage9_I_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage9_R_0_ce0 = 1'b1;
    end else begin
        Stage9_R_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_R_0_ce1 = 1'b1;
    end else begin
        Stage9_R_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage9_R_1_ce0 = 1'b1;
    end else begin
        Stage9_R_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_R_1_ce1 = 1'b1;
    end else begin
        Stage9_R_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage9_R_2_ce0 = 1'b1;
    end else begin
        Stage9_R_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_R_2_ce1 = 1'b1;
    end else begin
        Stage9_R_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        Stage9_R_3_ce0 = 1'b1;
    end else begin
        Stage9_R_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Stage9_R_3_ce1 = 1'b1;
    end else begin
        Stage9_R_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_imag_ce0 = 1'b1;
    end else begin
        W_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_imag_ce1 = 1'b1;
    end else begin
        W_imag_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_real_ce0 = 1'b1;
    end else begin
        W_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_real_ce1 = 1'b1;
    end else begin
        W_real_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_707_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_4 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_4 = i_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 11'd512;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load_1 = 11'd512;
    end else begin
        ap_sig_allocacmp_j_load_1 = j_fu_90;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OUT_I_0_address0 = zext_ln214_reg_1142_pp0_iter15_reg;

assign OUT_I_0_address1 = zext_ln211_reg_983_pp0_iter15_reg;

assign OUT_I_0_d0 = bitcast_ln217_reg_1246;

assign OUT_I_0_d1 = reg_686;

assign OUT_I_1_address0 = zext_ln214_reg_1142_pp0_iter15_reg;

assign OUT_I_1_address1 = zext_ln211_reg_983_pp0_iter15_reg;

assign OUT_I_1_d0 = bitcast_ln217_1_reg_1264;

assign OUT_I_1_d1 = reg_690;

assign OUT_I_2_address0 = zext_ln214_reg_1142_pp0_iter15_reg;

assign OUT_I_2_address1 = zext_ln211_reg_983_pp0_iter15_reg;

assign OUT_I_2_d0 = bitcast_ln217_reg_1246;

assign OUT_I_2_d1 = reg_686;

assign OUT_I_3_address0 = zext_ln214_reg_1142_pp0_iter15_reg;

assign OUT_I_3_address1 = zext_ln211_reg_983_pp0_iter15_reg;

assign OUT_I_3_d0 = bitcast_ln217_1_reg_1264;

assign OUT_I_3_d1 = reg_690;

assign OUT_R_0_address0 = zext_ln214_reg_1142_pp0_iter15_reg;

assign OUT_R_0_address1 = zext_ln211_reg_983_pp0_iter15_reg;

assign OUT_R_0_d0 = bitcast_ln216_reg_1240;

assign OUT_R_0_d1 = bitcast_ln214_reg_1234;

assign OUT_R_1_address0 = zext_ln214_reg_1142_pp0_iter15_reg;

assign OUT_R_1_address1 = zext_ln211_reg_983_pp0_iter15_reg;

assign OUT_R_1_d0 = bitcast_ln216_1_reg_1258;

assign OUT_R_1_d1 = bitcast_ln214_1_reg_1252;

assign OUT_R_2_address0 = zext_ln214_reg_1142_pp0_iter15_reg;

assign OUT_R_2_address1 = zext_ln211_reg_983_pp0_iter15_reg;

assign OUT_R_2_d0 = bitcast_ln216_reg_1240;

assign OUT_R_2_d1 = bitcast_ln214_reg_1234;

assign OUT_R_3_address0 = zext_ln214_reg_1142_pp0_iter15_reg;

assign OUT_R_3_address1 = zext_ln211_reg_983_pp0_iter15_reg;

assign OUT_R_3_d0 = bitcast_ln216_1_reg_1258;

assign OUT_R_3_d1 = bitcast_ln214_1_reg_1252;

assign Stage9_I_0_address0 = zext_ln214_fu_855_p1;

assign Stage9_I_0_address1 = zext_ln211_fu_746_p1;

assign Stage9_I_1_address0 = zext_ln214_fu_855_p1;

assign Stage9_I_1_address1 = zext_ln211_fu_746_p1;

assign Stage9_I_2_address0 = zext_ln214_fu_855_p1;

assign Stage9_I_2_address1 = zext_ln211_fu_746_p1;

assign Stage9_I_3_address0 = zext_ln214_fu_855_p1;

assign Stage9_I_3_address1 = zext_ln211_fu_746_p1;

assign Stage9_R_0_address0 = zext_ln214_fu_855_p1;

assign Stage9_R_0_address1 = zext_ln211_fu_746_p1;

assign Stage9_R_1_address0 = zext_ln214_fu_855_p1;

assign Stage9_R_1_address1 = zext_ln211_fu_746_p1;

assign Stage9_R_2_address0 = zext_ln214_fu_855_p1;

assign Stage9_R_2_address1 = zext_ln211_fu_746_p1;

assign Stage9_R_3_address0 = zext_ln214_fu_855_p1;

assign Stage9_R_3_address1 = zext_ln211_fu_746_p1;

assign W_imag_address0 = zext_ln208_fu_780_p1;

assign W_imag_address1 = i_4_cast26_fu_722_p1;

assign W_real_address0 = zext_ln208_fu_780_p1;

assign W_real_address1 = i_4_cast26_fu_722_p1;

assign add_ln205_fu_795_p2 = (ap_sig_allocacmp_i_4 + 10'd2);

assign add_ln219_fu_789_p2 = (ap_sig_allocacmp_j_load_1 + 11'd2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_255 = (ap_predicate_op255_store_state17 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_258 = (ap_predicate_op258_store_state17 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_260 = (ap_predicate_op260_store_state17 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_263 = (ap_predicate_op263_store_state17 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_265 = (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_267 = (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_270 = (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_272 = (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_275 = (ap_predicate_op275_store_state17 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_278 = (ap_predicate_op278_store_state17 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_280 = (ap_predicate_op280_store_state17 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_283 = (ap_predicate_op283_store_state17 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_285 = (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_287 = (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_290 = (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_292 = (icmp_ln216_reg_1212_pp0_iter15_reg == 1'd1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state17_pp0_iter16_stage0 = ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_empty_14_reg_558 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_15_reg_548 = 'bx;

always @ (*) begin
    ap_predicate_op255_store_state17 = ((icmp_ln214_reg_1020_pp0_iter15_reg == 1'd0) & (tmp_reg_952_pp0_iter15_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op258_store_state17 = ((icmp_ln214_reg_1020_pp0_iter15_reg == 1'd0) & (tmp_reg_952_pp0_iter15_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op260_store_state17 = ((icmp_ln214_reg_1020_pp0_iter15_reg == 1'd1) & (tmp_reg_952_pp0_iter15_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op263_store_state17 = ((icmp_ln214_reg_1020_pp0_iter15_reg == 1'd1) & (tmp_reg_952_pp0_iter15_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op275_store_state17 = ((icmp_ln214_reg_1020_pp0_iter15_reg == 1'd0) & (tmp_reg_952_pp0_iter15_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op278_store_state17 = ((icmp_ln214_reg_1020_pp0_iter15_reg == 1'd0) & (tmp_reg_952_pp0_iter15_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op280_store_state17 = ((icmp_ln214_reg_1020_pp0_iter15_reg == 1'd1) & (tmp_reg_952_pp0_iter15_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op283_store_state17 = ((icmp_ln214_reg_1020_pp0_iter15_reg == 1'd1) & (tmp_reg_952_pp0_iter15_reg == 1'd0));
end

assign bitcast_ln214_1_fu_905_p1 = grp_fu_551_p_dout0;

assign bitcast_ln214_fu_893_p1 = grp_fu_535_p_dout0;

assign bitcast_ln216_1_fu_909_p1 = grp_fu_559_p_dout0;

assign bitcast_ln216_fu_897_p1 = grp_fu_543_p_dout0;

assign bitcast_ln217_1_fu_913_p1 = grp_fu_563_p_dout0;

assign bitcast_ln217_fu_901_p1 = grp_fu_547_p_dout0;

assign empty_16_fu_718_p1 = ap_sig_allocacmp_i_4[8:0];

assign empty_17_fu_728_p1 = ap_sig_allocacmp_i_4[1:0];

assign empty_18_fu_732_p1 = ap_sig_allocacmp_j_load[1:0];

assign grp_fu_519_p_ce = 1'b1;

assign grp_fu_519_p_din0 = mul_i_reg_1102;

assign grp_fu_519_p_din1 = mul7_i_reg_1107;

assign grp_fu_519_p_opcode = 2'd1;

assign grp_fu_523_p_ce = 1'b1;

assign grp_fu_523_p_din0 = mul10_i_reg_1112;

assign grp_fu_523_p_din1 = mul13_i_reg_1117;

assign grp_fu_523_p_opcode = 2'd0;

assign grp_fu_527_p_ce = 1'b1;

assign grp_fu_527_p_din0 = mul_1_i_reg_1122;

assign grp_fu_527_p_din1 = mul7_1_i_reg_1127;

assign grp_fu_527_p_opcode = 2'd1;

assign grp_fu_531_p_ce = 1'b1;

assign grp_fu_531_p_din0 = mul10_1_i_reg_1132;

assign grp_fu_531_p_din1 = mul13_1_i_reg_1137;

assign grp_fu_531_p_opcode = 2'd0;

assign grp_fu_535_p_ce = 1'b1;

assign grp_fu_535_p_din0 = tmp_5_reg_1206;

assign grp_fu_535_p_din1 = temp_R_reg_1194;

assign grp_fu_535_p_opcode = 2'd1;

assign grp_fu_539_p_ce = 1'b1;

assign grp_fu_539_p_din0 = reg_672;

assign grp_fu_539_p_din1 = temp_I_reg_1200;

assign grp_fu_539_p_opcode = 2'd1;

assign grp_fu_543_p_ce = 1'b1;

assign grp_fu_543_p_din0 = tmp_5_reg_1206;

assign grp_fu_543_p_din1 = temp_R_reg_1194;

assign grp_fu_543_p_opcode = 2'd0;

assign grp_fu_547_p_ce = 1'b1;

assign grp_fu_547_p_din0 = ap_phi_reg_pp0_iter11_empty_15_reg_548;

assign grp_fu_547_p_din1 = temp_I_reg_1200;

assign grp_fu_547_p_opcode = 2'd0;

assign grp_fu_551_p_ce = 1'b1;

assign grp_fu_551_p_din0 = tmp_s_reg_1228;

assign grp_fu_551_p_din1 = temp_R_1_reg_1216;

assign grp_fu_551_p_opcode = 2'd1;

assign grp_fu_555_p_ce = 1'b1;

assign grp_fu_555_p_din0 = reg_679;

assign grp_fu_555_p_din1 = temp_I_1_reg_1222;

assign grp_fu_555_p_opcode = 2'd1;

assign grp_fu_559_p_ce = 1'b1;

assign grp_fu_559_p_din0 = tmp_s_reg_1228;

assign grp_fu_559_p_din1 = temp_R_1_reg_1216;

assign grp_fu_559_p_opcode = 2'd0;

assign grp_fu_563_p_ce = 1'b1;

assign grp_fu_563_p_din0 = ap_phi_reg_pp0_iter11_empty_14_reg_558;

assign grp_fu_563_p_din1 = temp_I_1_reg_1222;

assign grp_fu_563_p_opcode = 2'd0;

assign grp_fu_567_p_ce = 1'b1;

assign grp_fu_567_p_din0 = tmp_3_reg_1066;

assign grp_fu_567_p_din1 = c2_reg_1054;

assign grp_fu_571_p_ce = 1'b1;

assign grp_fu_571_p_din0 = tmp_2_reg_1072;

assign grp_fu_571_p_din1 = s2_reg_1060;

assign grp_fu_575_p_ce = 1'b1;

assign grp_fu_575_p_din0 = tmp_2_reg_1072;

assign grp_fu_575_p_din1 = c2_reg_1054;

assign grp_fu_579_p_ce = 1'b1;

assign grp_fu_579_p_din0 = tmp_3_reg_1066;

assign grp_fu_579_p_din1 = s2_reg_1060;

assign i_4_cast26_fu_722_p1 = ap_sig_allocacmp_i_4;

assign icmp_ln214_fu_768_p2 = ((empty_18_fu_732_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln216_fu_877_p2 = ((empty_17_reg_956_pp0_iter9_reg == 2'd0) ? 1'b1 : 1'b0);

assign lshr_ln3_fu_736_p4 = {{ap_sig_allocacmp_j_load[9:2]}};

assign or_ln205_fu_774_p2 = (empty_16_fu_718_p1 | 9'd1);

assign tmp_fu_707_p3 = ap_sig_allocacmp_i_4[32'd9];

assign zext_ln208_fu_780_p1 = or_ln205_fu_774_p2;

assign zext_ln211_fu_746_p1 = lshr_ln3_fu_736_p4;

assign zext_ln214_fu_855_p1 = lshr_ln4_reg_1015_pp0_iter8_reg;

always @ (posedge ap_clk) begin
    zext_ln211_reg_983[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln211_reg_983_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln214_reg_1142[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln214_reg_1142_pp0_iter10_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln214_reg_1142_pp0_iter11_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln214_reg_1142_pp0_iter12_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln214_reg_1142_pp0_iter13_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln214_reg_1142_pp0_iter14_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln214_reg_1142_pp0_iter15_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //fft_fft_Pipeline_butterfly
