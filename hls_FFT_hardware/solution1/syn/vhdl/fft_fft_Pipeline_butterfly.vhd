-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft_fft_Pipeline_butterfly is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    OUT_R_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_1_ce0 : OUT STD_LOGIC;
    OUT_R_1_we0 : OUT STD_LOGIC;
    OUT_R_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_R_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_1_ce1 : OUT STD_LOGIC;
    OUT_R_1_we1 : OUT STD_LOGIC;
    OUT_R_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_I_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_1_ce0 : OUT STD_LOGIC;
    OUT_I_1_we0 : OUT STD_LOGIC;
    OUT_I_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_I_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_1_ce1 : OUT STD_LOGIC;
    OUT_I_1_we1 : OUT STD_LOGIC;
    OUT_I_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Stage9_R_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_R_1_ce0 : OUT STD_LOGIC;
    Stage9_R_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Stage9_R_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_R_1_ce1 : OUT STD_LOGIC;
    Stage9_R_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    Stage9_R_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_R_3_ce0 : OUT STD_LOGIC;
    Stage9_R_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Stage9_R_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_R_3_ce1 : OUT STD_LOGIC;
    Stage9_R_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    Stage9_I_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_I_1_ce0 : OUT STD_LOGIC;
    Stage9_I_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Stage9_I_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_I_1_ce1 : OUT STD_LOGIC;
    Stage9_I_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    Stage9_I_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_I_3_ce0 : OUT STD_LOGIC;
    Stage9_I_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Stage9_I_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_I_3_ce1 : OUT STD_LOGIC;
    Stage9_I_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    OUT_R_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_0_ce0 : OUT STD_LOGIC;
    OUT_R_0_we0 : OUT STD_LOGIC;
    OUT_R_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_R_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_0_ce1 : OUT STD_LOGIC;
    OUT_R_0_we1 : OUT STD_LOGIC;
    OUT_R_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_I_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_0_ce0 : OUT STD_LOGIC;
    OUT_I_0_we0 : OUT STD_LOGIC;
    OUT_I_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_I_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_0_ce1 : OUT STD_LOGIC;
    OUT_I_0_we1 : OUT STD_LOGIC;
    OUT_I_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Stage9_R_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_R_0_ce0 : OUT STD_LOGIC;
    Stage9_R_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Stage9_R_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_R_0_ce1 : OUT STD_LOGIC;
    Stage9_R_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    Stage9_R_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_R_2_ce0 : OUT STD_LOGIC;
    Stage9_R_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Stage9_R_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_R_2_ce1 : OUT STD_LOGIC;
    Stage9_R_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    Stage9_I_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_I_0_ce0 : OUT STD_LOGIC;
    Stage9_I_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Stage9_I_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_I_0_ce1 : OUT STD_LOGIC;
    Stage9_I_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    Stage9_I_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_I_2_ce0 : OUT STD_LOGIC;
    Stage9_I_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Stage9_I_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Stage9_I_2_ce1 : OUT STD_LOGIC;
    Stage9_I_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    OUT_R_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_2_ce0 : OUT STD_LOGIC;
    OUT_R_2_we0 : OUT STD_LOGIC;
    OUT_R_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_R_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_2_ce1 : OUT STD_LOGIC;
    OUT_R_2_we1 : OUT STD_LOGIC;
    OUT_R_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_I_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_2_ce0 : OUT STD_LOGIC;
    OUT_I_2_we0 : OUT STD_LOGIC;
    OUT_I_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_I_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_2_ce1 : OUT STD_LOGIC;
    OUT_I_2_we1 : OUT STD_LOGIC;
    OUT_I_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_R_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_3_ce0 : OUT STD_LOGIC;
    OUT_R_3_we0 : OUT STD_LOGIC;
    OUT_R_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_R_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_R_3_ce1 : OUT STD_LOGIC;
    OUT_R_3_we1 : OUT STD_LOGIC;
    OUT_R_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_I_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_3_ce0 : OUT STD_LOGIC;
    OUT_I_3_we0 : OUT STD_LOGIC;
    OUT_I_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    OUT_I_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_I_3_ce1 : OUT STD_LOGIC;
    OUT_I_3_we1 : OUT STD_LOGIC;
    OUT_I_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    W_real_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    W_real_ce0 : OUT STD_LOGIC;
    W_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_real_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    W_real_ce1 : OUT STD_LOGIC;
    W_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_imag_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    W_imag_ce0 : OUT STD_LOGIC;
    W_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    W_imag_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    W_imag_ce1 : OUT STD_LOGIC;
    W_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_519_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_519_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_519_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_519_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_519_p_ce : OUT STD_LOGIC;
    grp_fu_523_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_523_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_523_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_523_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_523_p_ce : OUT STD_LOGIC;
    grp_fu_527_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_527_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_527_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_527_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_527_p_ce : OUT STD_LOGIC;
    grp_fu_531_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_531_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_531_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_531_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_531_p_ce : OUT STD_LOGIC;
    grp_fu_535_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_535_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_535_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_535_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_535_p_ce : OUT STD_LOGIC;
    grp_fu_539_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_539_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_539_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_539_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_539_p_ce : OUT STD_LOGIC;
    grp_fu_543_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_543_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_543_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_543_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_543_p_ce : OUT STD_LOGIC;
    grp_fu_547_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_547_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_547_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_547_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_547_p_ce : OUT STD_LOGIC;
    grp_fu_551_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_551_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_551_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_551_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_551_p_ce : OUT STD_LOGIC;
    grp_fu_555_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_555_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_555_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_555_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_555_p_ce : OUT STD_LOGIC;
    grp_fu_559_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_559_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_559_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_559_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_559_p_ce : OUT STD_LOGIC;
    grp_fu_563_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_563_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_563_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_563_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_563_p_ce : OUT STD_LOGIC;
    grp_fu_567_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_567_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_567_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_567_p_ce : OUT STD_LOGIC;
    grp_fu_571_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_571_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_571_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_571_p_ce : OUT STD_LOGIC;
    grp_fu_575_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_575_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_575_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_575_p_ce : OUT STD_LOGIC;
    grp_fu_579_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_579_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_579_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_579_p_ce : OUT STD_LOGIC );
end;


architecture behav of fft_fft_Pipeline_butterfly is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_200 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal tmp_fu_707_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_650_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_672 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_952 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_952_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_661_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_679 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_686 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_952_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_690 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_952_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_952_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_952_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_952_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_952_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_952_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_952_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_952_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_952_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_952_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_952_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_952_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_952_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_17_fu_728_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_17_reg_956 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_17_reg_956_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_17_reg_956_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_17_reg_956_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_17_reg_956_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_17_reg_956_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_17_reg_956_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_17_reg_956_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_17_reg_956_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_17_reg_956_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_18_fu_732_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_18_reg_965 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln211_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln211_reg_983_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln4_reg_1015 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln4_reg_1015_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln4_reg_1015_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln4_reg_1015_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln4_reg_1015_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln4_reg_1015_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln4_reg_1015_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln4_reg_1015_pp0_iter7_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln4_reg_1015_pp0_iter8_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln214_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_1020_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal c2_reg_1054 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_reg_1060 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_811_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_822_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1072 : STD_LOGIC_VECTOR (31 downto 0);
    signal c2_1_reg_1078 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_1_reg_1084 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_833_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1090 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_844_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_i_reg_1102 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i_reg_1107 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul10_i_reg_1112 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul13_i_reg_1117 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_634_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_i_reg_1122 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_638_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_1_i_reg_1127 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_642_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul10_1_i_reg_1132 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_646_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul13_1_i_reg_1137 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln214_fu_855_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln214_reg_1142 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln214_reg_1142_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln214_reg_1142_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln214_reg_1142_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln214_reg_1142_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln214_reg_1142_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln214_reg_1142_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_R_reg_1194 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_I_reg_1200 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_866_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1206 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln216_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_1212 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_1212_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_1212_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_1212_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_1212_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln216_reg_1212_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_R_1_reg_1216 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_I_1_reg_1222 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_882_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1228 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln214_fu_893_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln214_reg_1234 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln216_fu_897_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln216_reg_1240 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln217_fu_901_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln217_reg_1246 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln214_1_fu_905_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln214_1_reg_1252 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln216_1_fu_909_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln216_1_reg_1258 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln217_1_fu_913_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln217_1_reg_1264 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_15_reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_15_reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_15_reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_empty_15_reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_empty_15_reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_empty_15_reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_empty_15_reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_empty_15_reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_empty_15_reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_empty_15_reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_empty_15_reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_empty_15_reg_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_14_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_14_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_14_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_empty_14_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_empty_14_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_empty_14_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_empty_14_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_empty_14_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_empty_14_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_empty_14_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter10_empty_14_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter11_empty_14_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_4_cast26_fu_722_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln208_fu_780_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_90 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln219_fu_789_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_allocacmp_j_load_1 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_fu_94 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln205_fu_795_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_i_4 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln3_fu_736_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_16_fu_718_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln205_fu_774_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op255_store_state17 : BOOLEAN;
    signal ap_enable_operation_255 : BOOLEAN;
    signal ap_enable_state17_pp0_iter16_stage0 : BOOLEAN;
    signal ap_enable_operation_265 : BOOLEAN;
    signal ap_predicate_op258_store_state17 : BOOLEAN;
    signal ap_enable_operation_258 : BOOLEAN;
    signal ap_enable_operation_267 : BOOLEAN;
    signal ap_predicate_op260_store_state17 : BOOLEAN;
    signal ap_enable_operation_260 : BOOLEAN;
    signal ap_enable_operation_270 : BOOLEAN;
    signal ap_predicate_op263_store_state17 : BOOLEAN;
    signal ap_enable_operation_263 : BOOLEAN;
    signal ap_enable_operation_272 : BOOLEAN;
    signal ap_predicate_op275_store_state17 : BOOLEAN;
    signal ap_enable_operation_275 : BOOLEAN;
    signal ap_enable_operation_285 : BOOLEAN;
    signal ap_predicate_op278_store_state17 : BOOLEAN;
    signal ap_enable_operation_278 : BOOLEAN;
    signal ap_enable_operation_287 : BOOLEAN;
    signal ap_predicate_op280_store_state17 : BOOLEAN;
    signal ap_enable_operation_280 : BOOLEAN;
    signal ap_enable_operation_290 : BOOLEAN;
    signal ap_predicate_op283_store_state17 : BOOLEAN;
    signal ap_enable_operation_283 : BOOLEAN;
    signal ap_enable_operation_292 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component fft_fsub_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fft_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fft_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fft_mux_32_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fft_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fmul_32ns_32ns_32_4_max_dsp_1_U126 : component fft_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_8_reg_1090,
        din1 => c2_1_reg_1078,
        ce => ap_const_logic_1,
        dout => grp_fu_634_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U127 : component fft_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_9_reg_1096,
        din1 => s2_1_reg_1084,
        ce => ap_const_logic_1,
        dout => grp_fu_638_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U128 : component fft_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_9_reg_1096,
        din1 => c2_1_reg_1078,
        ce => ap_const_logic_1,
        dout => grp_fu_642_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U129 : component fft_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_8_reg_1090,
        din1 => s2_1_reg_1084,
        ce => ap_const_logic_1,
        dout => grp_fu_646_p2);

    mux_32_32_1_1_U130 : component fft_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => Stage9_I_0_q0,
        din1 => ap_const_lv32_0,
        din2 => Stage9_I_2_q0,
        din3 => empty_17_reg_956_pp0_iter9_reg,
        dout => grp_fu_650_p5);

    mux_32_32_1_1_U131 : component fft_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => Stage9_I_1_q0,
        din1 => ap_const_lv32_0,
        din2 => Stage9_I_3_q0,
        din3 => empty_17_reg_956_pp0_iter9_reg,
        dout => grp_fu_661_p5);

    mux_32_32_1_1_U132 : component fft_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => Stage9_R_0_q1,
        din1 => ap_const_lv32_0,
        din2 => Stage9_R_2_q1,
        din3 => empty_18_reg_965,
        dout => tmp_3_fu_811_p5);

    mux_32_32_1_1_U133 : component fft_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => Stage9_I_0_q1,
        din1 => ap_const_lv32_0,
        din2 => Stage9_I_2_q1,
        din3 => empty_18_reg_965,
        dout => tmp_2_fu_822_p5);

    mux_32_32_1_1_U134 : component fft_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => Stage9_R_1_q1,
        din1 => ap_const_lv32_0,
        din2 => Stage9_R_3_q1,
        din3 => empty_18_reg_965,
        dout => tmp_8_fu_833_p5);

    mux_32_32_1_1_U135 : component fft_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => Stage9_I_1_q1,
        din1 => ap_const_lv32_0,
        din2 => Stage9_I_3_q1,
        din3 => empty_18_reg_965,
        dout => tmp_9_fu_844_p5);

    mux_32_32_1_1_U136 : component fft_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => Stage9_R_0_q0,
        din1 => ap_const_lv32_0,
        din2 => Stage9_R_2_q0,
        din3 => empty_17_reg_956_pp0_iter9_reg,
        dout => tmp_5_fu_866_p5);

    mux_32_32_1_1_U137 : component fft_mux_32_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => Stage9_R_1_q0,
        din1 => ap_const_lv32_0,
        din2 => Stage9_R_3_q0,
        din3 => empty_17_reg_956_pp0_iter9_reg,
        dout => tmp_s_fu_882_p5);

    flow_control_loop_pipe_sequential_init_U : component fft_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter15_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter11_empty_14_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter9_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter9_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter9_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter9_reg = ap_const_lv1_0)))) then 
                ap_phi_reg_pp0_iter11_empty_14_reg_558 <= grp_fu_661_p5;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter11_empty_14_reg_558 <= ap_phi_reg_pp0_iter10_empty_14_reg_558;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter11_empty_15_reg_548_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter9_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter9_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter9_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter9_reg = ap_const_lv1_0)))) then 
                ap_phi_reg_pp0_iter11_empty_15_reg_548 <= grp_fu_650_p5;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter11_empty_15_reg_548 <= ap_phi_reg_pp0_iter10_empty_15_reg_548;
            end if; 
        end if;
    end process;

    i_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((tmp_fu_707_p3 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_94 <= add_ln205_fu_795_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_94 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((tmp_fu_707_p3 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_90 <= add_ln219_fu_789_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_90 <= ap_const_lv11_200;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                bitcast_ln216_1_reg_1258 <= bitcast_ln216_1_fu_909_p1;
                bitcast_ln216_reg_1240 <= bitcast_ln216_fu_897_p1;
                bitcast_ln217_1_reg_1264 <= bitcast_ln217_1_fu_913_p1;
                bitcast_ln217_reg_1246 <= bitcast_ln217_fu_901_p1;
                empty_17_reg_956_pp0_iter2_reg <= empty_17_reg_956_pp0_iter1_reg;
                empty_17_reg_956_pp0_iter3_reg <= empty_17_reg_956_pp0_iter2_reg;
                empty_17_reg_956_pp0_iter4_reg <= empty_17_reg_956_pp0_iter3_reg;
                empty_17_reg_956_pp0_iter5_reg <= empty_17_reg_956_pp0_iter4_reg;
                empty_17_reg_956_pp0_iter6_reg <= empty_17_reg_956_pp0_iter5_reg;
                empty_17_reg_956_pp0_iter7_reg <= empty_17_reg_956_pp0_iter6_reg;
                empty_17_reg_956_pp0_iter8_reg <= empty_17_reg_956_pp0_iter7_reg;
                empty_17_reg_956_pp0_iter9_reg <= empty_17_reg_956_pp0_iter8_reg;
                icmp_ln214_reg_1020_pp0_iter10_reg <= icmp_ln214_reg_1020_pp0_iter9_reg;
                icmp_ln214_reg_1020_pp0_iter11_reg <= icmp_ln214_reg_1020_pp0_iter10_reg;
                icmp_ln214_reg_1020_pp0_iter12_reg <= icmp_ln214_reg_1020_pp0_iter11_reg;
                icmp_ln214_reg_1020_pp0_iter13_reg <= icmp_ln214_reg_1020_pp0_iter12_reg;
                icmp_ln214_reg_1020_pp0_iter14_reg <= icmp_ln214_reg_1020_pp0_iter13_reg;
                icmp_ln214_reg_1020_pp0_iter15_reg <= icmp_ln214_reg_1020_pp0_iter14_reg;
                icmp_ln214_reg_1020_pp0_iter2_reg <= icmp_ln214_reg_1020_pp0_iter1_reg;
                icmp_ln214_reg_1020_pp0_iter3_reg <= icmp_ln214_reg_1020_pp0_iter2_reg;
                icmp_ln214_reg_1020_pp0_iter4_reg <= icmp_ln214_reg_1020_pp0_iter3_reg;
                icmp_ln214_reg_1020_pp0_iter5_reg <= icmp_ln214_reg_1020_pp0_iter4_reg;
                icmp_ln214_reg_1020_pp0_iter6_reg <= icmp_ln214_reg_1020_pp0_iter5_reg;
                icmp_ln214_reg_1020_pp0_iter7_reg <= icmp_ln214_reg_1020_pp0_iter6_reg;
                icmp_ln214_reg_1020_pp0_iter8_reg <= icmp_ln214_reg_1020_pp0_iter7_reg;
                icmp_ln214_reg_1020_pp0_iter9_reg <= icmp_ln214_reg_1020_pp0_iter8_reg;
                icmp_ln216_reg_1212 <= icmp_ln216_fu_877_p2;
                icmp_ln216_reg_1212_pp0_iter11_reg <= icmp_ln216_reg_1212;
                icmp_ln216_reg_1212_pp0_iter12_reg <= icmp_ln216_reg_1212_pp0_iter11_reg;
                icmp_ln216_reg_1212_pp0_iter13_reg <= icmp_ln216_reg_1212_pp0_iter12_reg;
                icmp_ln216_reg_1212_pp0_iter14_reg <= icmp_ln216_reg_1212_pp0_iter13_reg;
                icmp_ln216_reg_1212_pp0_iter15_reg <= icmp_ln216_reg_1212_pp0_iter14_reg;
                lshr_ln4_reg_1015_pp0_iter2_reg <= lshr_ln4_reg_1015_pp0_iter1_reg;
                lshr_ln4_reg_1015_pp0_iter3_reg <= lshr_ln4_reg_1015_pp0_iter2_reg;
                lshr_ln4_reg_1015_pp0_iter4_reg <= lshr_ln4_reg_1015_pp0_iter3_reg;
                lshr_ln4_reg_1015_pp0_iter5_reg <= lshr_ln4_reg_1015_pp0_iter4_reg;
                lshr_ln4_reg_1015_pp0_iter6_reg <= lshr_ln4_reg_1015_pp0_iter5_reg;
                lshr_ln4_reg_1015_pp0_iter7_reg <= lshr_ln4_reg_1015_pp0_iter6_reg;
                lshr_ln4_reg_1015_pp0_iter8_reg <= lshr_ln4_reg_1015_pp0_iter7_reg;
                tmp_reg_952_pp0_iter10_reg <= tmp_reg_952_pp0_iter9_reg;
                tmp_reg_952_pp0_iter11_reg <= tmp_reg_952_pp0_iter10_reg;
                tmp_reg_952_pp0_iter12_reg <= tmp_reg_952_pp0_iter11_reg;
                tmp_reg_952_pp0_iter13_reg <= tmp_reg_952_pp0_iter12_reg;
                tmp_reg_952_pp0_iter14_reg <= tmp_reg_952_pp0_iter13_reg;
                tmp_reg_952_pp0_iter15_reg <= tmp_reg_952_pp0_iter14_reg;
                tmp_reg_952_pp0_iter2_reg <= tmp_reg_952_pp0_iter1_reg;
                tmp_reg_952_pp0_iter3_reg <= tmp_reg_952_pp0_iter2_reg;
                tmp_reg_952_pp0_iter4_reg <= tmp_reg_952_pp0_iter3_reg;
                tmp_reg_952_pp0_iter5_reg <= tmp_reg_952_pp0_iter4_reg;
                tmp_reg_952_pp0_iter6_reg <= tmp_reg_952_pp0_iter5_reg;
                tmp_reg_952_pp0_iter7_reg <= tmp_reg_952_pp0_iter6_reg;
                tmp_reg_952_pp0_iter8_reg <= tmp_reg_952_pp0_iter7_reg;
                tmp_reg_952_pp0_iter9_reg <= tmp_reg_952_pp0_iter8_reg;
                    zext_ln211_reg_983_pp0_iter10_reg(7 downto 0) <= zext_ln211_reg_983_pp0_iter9_reg(7 downto 0);
                    zext_ln211_reg_983_pp0_iter11_reg(7 downto 0) <= zext_ln211_reg_983_pp0_iter10_reg(7 downto 0);
                    zext_ln211_reg_983_pp0_iter12_reg(7 downto 0) <= zext_ln211_reg_983_pp0_iter11_reg(7 downto 0);
                    zext_ln211_reg_983_pp0_iter13_reg(7 downto 0) <= zext_ln211_reg_983_pp0_iter12_reg(7 downto 0);
                    zext_ln211_reg_983_pp0_iter14_reg(7 downto 0) <= zext_ln211_reg_983_pp0_iter13_reg(7 downto 0);
                    zext_ln211_reg_983_pp0_iter15_reg(7 downto 0) <= zext_ln211_reg_983_pp0_iter14_reg(7 downto 0);
                    zext_ln211_reg_983_pp0_iter2_reg(7 downto 0) <= zext_ln211_reg_983_pp0_iter1_reg(7 downto 0);
                    zext_ln211_reg_983_pp0_iter3_reg(7 downto 0) <= zext_ln211_reg_983_pp0_iter2_reg(7 downto 0);
                    zext_ln211_reg_983_pp0_iter4_reg(7 downto 0) <= zext_ln211_reg_983_pp0_iter3_reg(7 downto 0);
                    zext_ln211_reg_983_pp0_iter5_reg(7 downto 0) <= zext_ln211_reg_983_pp0_iter4_reg(7 downto 0);
                    zext_ln211_reg_983_pp0_iter6_reg(7 downto 0) <= zext_ln211_reg_983_pp0_iter5_reg(7 downto 0);
                    zext_ln211_reg_983_pp0_iter7_reg(7 downto 0) <= zext_ln211_reg_983_pp0_iter6_reg(7 downto 0);
                    zext_ln211_reg_983_pp0_iter8_reg(7 downto 0) <= zext_ln211_reg_983_pp0_iter7_reg(7 downto 0);
                    zext_ln211_reg_983_pp0_iter9_reg(7 downto 0) <= zext_ln211_reg_983_pp0_iter8_reg(7 downto 0);
                    zext_ln214_reg_1142_pp0_iter10_reg(6 downto 0) <= zext_ln214_reg_1142(6 downto 0);
                    zext_ln214_reg_1142_pp0_iter11_reg(6 downto 0) <= zext_ln214_reg_1142_pp0_iter10_reg(6 downto 0);
                    zext_ln214_reg_1142_pp0_iter12_reg(6 downto 0) <= zext_ln214_reg_1142_pp0_iter11_reg(6 downto 0);
                    zext_ln214_reg_1142_pp0_iter13_reg(6 downto 0) <= zext_ln214_reg_1142_pp0_iter12_reg(6 downto 0);
                    zext_ln214_reg_1142_pp0_iter14_reg(6 downto 0) <= zext_ln214_reg_1142_pp0_iter13_reg(6 downto 0);
                    zext_ln214_reg_1142_pp0_iter15_reg(6 downto 0) <= zext_ln214_reg_1142_pp0_iter14_reg(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                empty_17_reg_956_pp0_iter1_reg <= empty_17_reg_956;
                icmp_ln214_reg_1020_pp0_iter1_reg <= icmp_ln214_reg_1020;
                lshr_ln4_reg_1015_pp0_iter1_reg <= lshr_ln4_reg_1015;
                tmp_reg_952 <= ap_sig_allocacmp_i_4(9 downto 9);
                tmp_reg_952_pp0_iter1_reg <= tmp_reg_952;
                    zext_ln211_reg_983_pp0_iter1_reg(7 downto 0) <= zext_ln211_reg_983(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter10_empty_14_reg_558 <= ap_phi_reg_pp0_iter9_empty_14_reg_558;
                ap_phi_reg_pp0_iter10_empty_15_reg_548 <= ap_phi_reg_pp0_iter9_empty_15_reg_548;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_empty_14_reg_558 <= ap_phi_reg_pp0_iter0_empty_14_reg_558;
                ap_phi_reg_pp0_iter1_empty_15_reg_548 <= ap_phi_reg_pp0_iter0_empty_15_reg_548;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_empty_14_reg_558 <= ap_phi_reg_pp0_iter1_empty_14_reg_558;
                ap_phi_reg_pp0_iter2_empty_15_reg_548 <= ap_phi_reg_pp0_iter1_empty_15_reg_548;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_empty_14_reg_558 <= ap_phi_reg_pp0_iter2_empty_14_reg_558;
                ap_phi_reg_pp0_iter3_empty_15_reg_548 <= ap_phi_reg_pp0_iter2_empty_15_reg_548;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_empty_14_reg_558 <= ap_phi_reg_pp0_iter3_empty_14_reg_558;
                ap_phi_reg_pp0_iter4_empty_15_reg_548 <= ap_phi_reg_pp0_iter3_empty_15_reg_548;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter5_empty_14_reg_558 <= ap_phi_reg_pp0_iter4_empty_14_reg_558;
                ap_phi_reg_pp0_iter5_empty_15_reg_548 <= ap_phi_reg_pp0_iter4_empty_15_reg_548;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter6_empty_14_reg_558 <= ap_phi_reg_pp0_iter5_empty_14_reg_558;
                ap_phi_reg_pp0_iter6_empty_15_reg_548 <= ap_phi_reg_pp0_iter5_empty_15_reg_548;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter7_empty_14_reg_558 <= ap_phi_reg_pp0_iter6_empty_14_reg_558;
                ap_phi_reg_pp0_iter7_empty_15_reg_548 <= ap_phi_reg_pp0_iter6_empty_15_reg_548;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter8_empty_14_reg_558 <= ap_phi_reg_pp0_iter7_empty_14_reg_558;
                ap_phi_reg_pp0_iter8_empty_15_reg_548 <= ap_phi_reg_pp0_iter7_empty_15_reg_548;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter9_empty_14_reg_558 <= ap_phi_reg_pp0_iter8_empty_14_reg_558;
                ap_phi_reg_pp0_iter9_empty_15_reg_548 <= ap_phi_reg_pp0_iter8_empty_15_reg_548;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_952_pp0_iter14_reg = ap_const_lv1_0))) then
                bitcast_ln214_1_reg_1252 <= bitcast_ln214_1_fu_905_p1;
                bitcast_ln214_reg_1234 <= bitcast_ln214_fu_893_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_952 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                c2_1_reg_1078 <= W_real_q0;
                c2_reg_1054 <= W_real_q1;
                s2_1_reg_1084 <= W_imag_q0;
                s2_reg_1060 <= W_imag_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_707_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_17_reg_956 <= empty_17_fu_728_p1;
                empty_18_reg_965 <= empty_18_fu_732_p1;
                icmp_ln214_reg_1020 <= icmp_ln214_fu_768_p2;
                lshr_ln4_reg_1015 <= ap_sig_allocacmp_i_4(8 downto 2);
                    zext_ln211_reg_983(7 downto 0) <= zext_ln211_fu_746_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_952_pp0_iter4_reg = ap_const_lv1_0))) then
                mul10_1_i_reg_1132 <= grp_fu_642_p2;
                mul10_i_reg_1112 <= grp_fu_575_p_dout0;
                mul13_1_i_reg_1137 <= grp_fu_646_p2;
                mul13_i_reg_1117 <= grp_fu_579_p_dout0;
                mul7_1_i_reg_1127 <= grp_fu_638_p2;
                mul7_i_reg_1107 <= grp_fu_571_p_dout0;
                mul_1_i_reg_1122 <= grp_fu_634_p2;
                mul_i_reg_1102 <= grp_fu_567_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter9_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter9_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter9_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter9_reg = ap_const_lv1_0)))) then
                reg_672 <= grp_fu_650_p5;
                reg_679 <= grp_fu_661_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter14_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter14_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter14_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter14_reg = ap_const_lv1_0)))) then
                reg_686 <= grp_fu_539_p_dout0;
                reg_690 <= grp_fu_555_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_952_pp0_iter9_reg = ap_const_lv1_0))) then
                temp_I_1_reg_1222 <= grp_fu_531_p_dout0;
                temp_I_reg_1200 <= grp_fu_523_p_dout0;
                temp_R_1_reg_1216 <= grp_fu_527_p_dout0;
                temp_R_reg_1194 <= grp_fu_519_p_dout0;
                tmp_5_reg_1206 <= tmp_5_fu_866_p5;
                tmp_s_reg_1228 <= tmp_s_fu_882_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_952 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_2_reg_1072 <= tmp_2_fu_822_p5;
                tmp_3_reg_1066 <= tmp_3_fu_811_p5;
                tmp_8_reg_1090 <= tmp_8_fu_833_p5;
                tmp_9_reg_1096 <= tmp_9_fu_844_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_952_pp0_iter8_reg = ap_const_lv1_0))) then
                    zext_ln214_reg_1142(6 downto 0) <= zext_ln214_fu_855_p1(6 downto 0);
            end if;
        end if;
    end process;
    zext_ln211_reg_983(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter1_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter2_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter3_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter4_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter5_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter6_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter7_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter8_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter9_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter10_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter11_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter12_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter13_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter14_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln211_reg_983_pp0_iter15_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln214_reg_1142(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln214_reg_1142_pp0_iter10_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln214_reg_1142_pp0_iter11_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln214_reg_1142_pp0_iter12_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln214_reg_1142_pp0_iter13_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln214_reg_1142_pp0_iter14_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln214_reg_1142_pp0_iter15_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    OUT_I_0_address0 <= zext_ln214_reg_1142_pp0_iter15_reg(8 - 1 downto 0);
    OUT_I_0_address1 <= zext_ln211_reg_983_pp0_iter15_reg(8 - 1 downto 0);

    OUT_I_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_I_0_ce0 <= ap_const_logic_1;
        else 
            OUT_I_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_I_0_ce1 <= ap_const_logic_1;
        else 
            OUT_I_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_I_0_d0 <= bitcast_ln217_reg_1246;
    OUT_I_0_d1 <= reg_686;

    OUT_I_0_we0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_1))) then 
            OUT_I_0_we0 <= ap_const_logic_1;
        else 
            OUT_I_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_0_we1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0))) then 
            OUT_I_0_we1 <= ap_const_logic_1;
        else 
            OUT_I_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_I_1_address0 <= zext_ln214_reg_1142_pp0_iter15_reg(8 - 1 downto 0);
    OUT_I_1_address1 <= zext_ln211_reg_983_pp0_iter15_reg(8 - 1 downto 0);

    OUT_I_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_I_1_ce0 <= ap_const_logic_1;
        else 
            OUT_I_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_I_1_ce1 <= ap_const_logic_1;
        else 
            OUT_I_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_I_1_d0 <= bitcast_ln217_1_reg_1264;
    OUT_I_1_d1 <= reg_690;

    OUT_I_1_we0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_1))) then 
            OUT_I_1_we0 <= ap_const_logic_1;
        else 
            OUT_I_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_1_we1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0))) then 
            OUT_I_1_we1 <= ap_const_logic_1;
        else 
            OUT_I_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_I_2_address0 <= zext_ln214_reg_1142_pp0_iter15_reg(8 - 1 downto 0);
    OUT_I_2_address1 <= zext_ln211_reg_983_pp0_iter15_reg(8 - 1 downto 0);

    OUT_I_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_I_2_ce0 <= ap_const_logic_1;
        else 
            OUT_I_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_I_2_ce1 <= ap_const_logic_1;
        else 
            OUT_I_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_I_2_d0 <= bitcast_ln217_reg_1246;
    OUT_I_2_d1 <= reg_686;

    OUT_I_2_we0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_0))) then 
            OUT_I_2_we0 <= ap_const_logic_1;
        else 
            OUT_I_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_2_we1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0))) then 
            OUT_I_2_we1 <= ap_const_logic_1;
        else 
            OUT_I_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_I_3_address0 <= zext_ln214_reg_1142_pp0_iter15_reg(8 - 1 downto 0);
    OUT_I_3_address1 <= zext_ln211_reg_983_pp0_iter15_reg(8 - 1 downto 0);

    OUT_I_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_I_3_ce0 <= ap_const_logic_1;
        else 
            OUT_I_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_I_3_ce1 <= ap_const_logic_1;
        else 
            OUT_I_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_I_3_d0 <= bitcast_ln217_1_reg_1264;
    OUT_I_3_d1 <= reg_690;

    OUT_I_3_we0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_0))) then 
            OUT_I_3_we0 <= ap_const_logic_1;
        else 
            OUT_I_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_I_3_we1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0))) then 
            OUT_I_3_we1 <= ap_const_logic_1;
        else 
            OUT_I_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_R_0_address0 <= zext_ln214_reg_1142_pp0_iter15_reg(8 - 1 downto 0);
    OUT_R_0_address1 <= zext_ln211_reg_983_pp0_iter15_reg(8 - 1 downto 0);

    OUT_R_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_R_0_ce0 <= ap_const_logic_1;
        else 
            OUT_R_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_R_0_ce1 <= ap_const_logic_1;
        else 
            OUT_R_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_R_0_d0 <= bitcast_ln216_reg_1240;
    OUT_R_0_d1 <= bitcast_ln214_reg_1234;

    OUT_R_0_we0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_1))) then 
            OUT_R_0_we0 <= ap_const_logic_1;
        else 
            OUT_R_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_0_we1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0))) then 
            OUT_R_0_we1 <= ap_const_logic_1;
        else 
            OUT_R_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_R_1_address0 <= zext_ln214_reg_1142_pp0_iter15_reg(8 - 1 downto 0);
    OUT_R_1_address1 <= zext_ln211_reg_983_pp0_iter15_reg(8 - 1 downto 0);

    OUT_R_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_R_1_ce0 <= ap_const_logic_1;
        else 
            OUT_R_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_R_1_ce1 <= ap_const_logic_1;
        else 
            OUT_R_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_R_1_d0 <= bitcast_ln216_1_reg_1258;
    OUT_R_1_d1 <= bitcast_ln214_1_reg_1252;

    OUT_R_1_we0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_1))) then 
            OUT_R_1_we0 <= ap_const_logic_1;
        else 
            OUT_R_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_1_we1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0))) then 
            OUT_R_1_we1 <= ap_const_logic_1;
        else 
            OUT_R_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_R_2_address0 <= zext_ln214_reg_1142_pp0_iter15_reg(8 - 1 downto 0);
    OUT_R_2_address1 <= zext_ln211_reg_983_pp0_iter15_reg(8 - 1 downto 0);

    OUT_R_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_R_2_ce0 <= ap_const_logic_1;
        else 
            OUT_R_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_R_2_ce1 <= ap_const_logic_1;
        else 
            OUT_R_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_R_2_d0 <= bitcast_ln216_reg_1240;
    OUT_R_2_d1 <= bitcast_ln214_reg_1234;

    OUT_R_2_we0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_0))) then 
            OUT_R_2_we0 <= ap_const_logic_1;
        else 
            OUT_R_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_2_we1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0))) then 
            OUT_R_2_we1 <= ap_const_logic_1;
        else 
            OUT_R_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_R_3_address0 <= zext_ln214_reg_1142_pp0_iter15_reg(8 - 1 downto 0);
    OUT_R_3_address1 <= zext_ln211_reg_983_pp0_iter15_reg(8 - 1 downto 0);

    OUT_R_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_R_3_ce0 <= ap_const_logic_1;
        else 
            OUT_R_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then 
            OUT_R_3_ce1 <= ap_const_logic_1;
        else 
            OUT_R_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    OUT_R_3_d0 <= bitcast_ln216_1_reg_1258;
    OUT_R_3_d1 <= bitcast_ln214_1_reg_1252;

    OUT_R_3_we0_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_0))) then 
            OUT_R_3_we0 <= ap_const_logic_1;
        else 
            OUT_R_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OUT_R_3_we1_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001, tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0))) then 
            OUT_R_3_we1 <= ap_const_logic_1;
        else 
            OUT_R_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    Stage9_I_0_address0 <= zext_ln214_fu_855_p1(8 - 1 downto 0);
    Stage9_I_0_address1 <= zext_ln211_fu_746_p1(8 - 1 downto 0);

    Stage9_I_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, tmp_reg_952_pp0_iter8_reg, icmp_ln214_reg_1020_pp0_iter8_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter8_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter8_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter8_reg = ap_const_lv1_0)))) then 
            Stage9_I_0_ce0 <= ap_const_logic_1;
        else 
            Stage9_I_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Stage9_I_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Stage9_I_0_ce1 <= ap_const_logic_1;
        else 
            Stage9_I_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Stage9_I_1_address0 <= zext_ln214_fu_855_p1(8 - 1 downto 0);
    Stage9_I_1_address1 <= zext_ln211_fu_746_p1(8 - 1 downto 0);

    Stage9_I_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, tmp_reg_952_pp0_iter8_reg, icmp_ln214_reg_1020_pp0_iter8_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter8_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter8_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter8_reg = ap_const_lv1_0)))) then 
            Stage9_I_1_ce0 <= ap_const_logic_1;
        else 
            Stage9_I_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Stage9_I_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Stage9_I_1_ce1 <= ap_const_logic_1;
        else 
            Stage9_I_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Stage9_I_2_address0 <= zext_ln214_fu_855_p1(8 - 1 downto 0);
    Stage9_I_2_address1 <= zext_ln211_fu_746_p1(8 - 1 downto 0);

    Stage9_I_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, tmp_reg_952_pp0_iter8_reg, icmp_ln214_reg_1020_pp0_iter8_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter8_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter8_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter8_reg = ap_const_lv1_0)))) then 
            Stage9_I_2_ce0 <= ap_const_logic_1;
        else 
            Stage9_I_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Stage9_I_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Stage9_I_2_ce1 <= ap_const_logic_1;
        else 
            Stage9_I_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Stage9_I_3_address0 <= zext_ln214_fu_855_p1(8 - 1 downto 0);
    Stage9_I_3_address1 <= zext_ln211_fu_746_p1(8 - 1 downto 0);

    Stage9_I_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, tmp_reg_952_pp0_iter8_reg, icmp_ln214_reg_1020_pp0_iter8_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter8_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln214_reg_1020_pp0_iter8_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter8_reg = ap_const_lv1_0)))) then 
            Stage9_I_3_ce0 <= ap_const_logic_1;
        else 
            Stage9_I_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Stage9_I_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Stage9_I_3_ce1 <= ap_const_logic_1;
        else 
            Stage9_I_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Stage9_R_0_address0 <= zext_ln214_fu_855_p1(8 - 1 downto 0);
    Stage9_R_0_address1 <= zext_ln211_fu_746_p1(8 - 1 downto 0);

    Stage9_R_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            Stage9_R_0_ce0 <= ap_const_logic_1;
        else 
            Stage9_R_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Stage9_R_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Stage9_R_0_ce1 <= ap_const_logic_1;
        else 
            Stage9_R_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Stage9_R_1_address0 <= zext_ln214_fu_855_p1(8 - 1 downto 0);
    Stage9_R_1_address1 <= zext_ln211_fu_746_p1(8 - 1 downto 0);

    Stage9_R_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            Stage9_R_1_ce0 <= ap_const_logic_1;
        else 
            Stage9_R_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Stage9_R_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Stage9_R_1_ce1 <= ap_const_logic_1;
        else 
            Stage9_R_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Stage9_R_2_address0 <= zext_ln214_fu_855_p1(8 - 1 downto 0);
    Stage9_R_2_address1 <= zext_ln211_fu_746_p1(8 - 1 downto 0);

    Stage9_R_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            Stage9_R_2_ce0 <= ap_const_logic_1;
        else 
            Stage9_R_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Stage9_R_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Stage9_R_2_ce1 <= ap_const_logic_1;
        else 
            Stage9_R_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Stage9_R_3_address0 <= zext_ln214_fu_855_p1(8 - 1 downto 0);
    Stage9_R_3_address1 <= zext_ln211_fu_746_p1(8 - 1 downto 0);

    Stage9_R_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            Stage9_R_3_ce0 <= ap_const_logic_1;
        else 
            Stage9_R_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Stage9_R_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Stage9_R_3_ce1 <= ap_const_logic_1;
        else 
            Stage9_R_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    W_imag_address0 <= zext_ln208_fu_780_p1(9 - 1 downto 0);
    W_imag_address1 <= i_4_cast26_fu_722_p1(9 - 1 downto 0);

    W_imag_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            W_imag_ce0 <= ap_const_logic_1;
        else 
            W_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_imag_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            W_imag_ce1 <= ap_const_logic_1;
        else 
            W_imag_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    W_real_address0 <= zext_ln208_fu_780_p1(9 - 1 downto 0);
    W_real_address1 <= i_4_cast26_fu_722_p1(9 - 1 downto 0);

    W_real_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            W_real_ce0 <= ap_const_logic_1;
        else 
            W_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_real_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            W_real_ce1 <= ap_const_logic_1;
        else 
            W_real_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln205_fu_795_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_4) + unsigned(ap_const_lv10_2));
    add_ln219_fu_789_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_load_1) + unsigned(ap_const_lv11_2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, tmp_fu_707_p3)
    begin
        if (((tmp_fu_707_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter15_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_255_assign_proc : process(ap_predicate_op255_store_state17)
    begin
                ap_enable_operation_255 <= (ap_predicate_op255_store_state17 = ap_const_boolean_1);
    end process;


    ap_enable_operation_258_assign_proc : process(ap_predicate_op258_store_state17)
    begin
                ap_enable_operation_258 <= (ap_predicate_op258_store_state17 = ap_const_boolean_1);
    end process;


    ap_enable_operation_260_assign_proc : process(ap_predicate_op260_store_state17)
    begin
                ap_enable_operation_260 <= (ap_predicate_op260_store_state17 = ap_const_boolean_1);
    end process;


    ap_enable_operation_263_assign_proc : process(ap_predicate_op263_store_state17)
    begin
                ap_enable_operation_263 <= (ap_predicate_op263_store_state17 = ap_const_boolean_1);
    end process;


    ap_enable_operation_265_assign_proc : process(icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
                ap_enable_operation_265 <= (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_267_assign_proc : process(icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
                ap_enable_operation_267 <= (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_270_assign_proc : process(icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
                ap_enable_operation_270 <= (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_272_assign_proc : process(icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
                ap_enable_operation_272 <= (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_275_assign_proc : process(ap_predicate_op275_store_state17)
    begin
                ap_enable_operation_275 <= (ap_predicate_op275_store_state17 = ap_const_boolean_1);
    end process;


    ap_enable_operation_278_assign_proc : process(ap_predicate_op278_store_state17)
    begin
                ap_enable_operation_278 <= (ap_predicate_op278_store_state17 = ap_const_boolean_1);
    end process;


    ap_enable_operation_280_assign_proc : process(ap_predicate_op280_store_state17)
    begin
                ap_enable_operation_280 <= (ap_predicate_op280_store_state17 = ap_const_boolean_1);
    end process;


    ap_enable_operation_283_assign_proc : process(ap_predicate_op283_store_state17)
    begin
                ap_enable_operation_283 <= (ap_predicate_op283_store_state17 = ap_const_boolean_1);
    end process;


    ap_enable_operation_285_assign_proc : process(icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
                ap_enable_operation_285 <= (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_287_assign_proc : process(icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
                ap_enable_operation_287 <= (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_290_assign_proc : process(icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
                ap_enable_operation_290 <= (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_292_assign_proc : process(icmp_ln216_reg_1212_pp0_iter15_reg)
    begin
                ap_enable_operation_292 <= (icmp_ln216_reg_1212_pp0_iter15_reg = ap_const_lv1_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state17_pp0_iter16_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter16)
    begin
                ap_enable_state17_pp0_iter16_stage0 <= ((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_phi_reg_pp0_iter0_empty_14_reg_558 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_15_reg_548 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op255_store_state17_assign_proc : process(tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
                ap_predicate_op255_store_state17 <= ((icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op258_store_state17_assign_proc : process(tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
                ap_predicate_op258_store_state17 <= ((icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op260_store_state17_assign_proc : process(tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
                ap_predicate_op260_store_state17 <= ((icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op263_store_state17_assign_proc : process(tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
                ap_predicate_op263_store_state17 <= ((icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op275_store_state17_assign_proc : process(tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
                ap_predicate_op275_store_state17 <= ((icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op278_store_state17_assign_proc : process(tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
                ap_predicate_op278_store_state17 <= ((icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_0) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op280_store_state17_assign_proc : process(tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
                ap_predicate_op280_store_state17 <= ((icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op283_store_state17_assign_proc : process(tmp_reg_952_pp0_iter15_reg, icmp_ln214_reg_1020_pp0_iter15_reg)
    begin
                ap_predicate_op283_store_state17 <= ((icmp_ln214_reg_1020_pp0_iter15_reg = ap_const_lv1_1) and (tmp_reg_952_pp0_iter15_reg = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_94)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_4 <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_i_4 <= i_fu_94;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_90, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv11_200;
        else 
            ap_sig_allocacmp_j_load <= j_fu_90;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_90, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_load_1 <= ap_const_lv11_200;
        else 
            ap_sig_allocacmp_j_load_1 <= j_fu_90;
        end if; 
    end process;

    bitcast_ln214_1_fu_905_p1 <= grp_fu_551_p_dout0;
    bitcast_ln214_fu_893_p1 <= grp_fu_535_p_dout0;
    bitcast_ln216_1_fu_909_p1 <= grp_fu_559_p_dout0;
    bitcast_ln216_fu_897_p1 <= grp_fu_543_p_dout0;
    bitcast_ln217_1_fu_913_p1 <= grp_fu_563_p_dout0;
    bitcast_ln217_fu_901_p1 <= grp_fu_547_p_dout0;
    empty_16_fu_718_p1 <= ap_sig_allocacmp_i_4(9 - 1 downto 0);
    empty_17_fu_728_p1 <= ap_sig_allocacmp_i_4(2 - 1 downto 0);
    empty_18_fu_732_p1 <= ap_sig_allocacmp_j_load(2 - 1 downto 0);
    grp_fu_519_p_ce <= ap_const_logic_1;
    grp_fu_519_p_din0 <= mul_i_reg_1102;
    grp_fu_519_p_din1 <= mul7_i_reg_1107;
    grp_fu_519_p_opcode <= ap_const_lv2_1;
    grp_fu_523_p_ce <= ap_const_logic_1;
    grp_fu_523_p_din0 <= mul10_i_reg_1112;
    grp_fu_523_p_din1 <= mul13_i_reg_1117;
    grp_fu_523_p_opcode <= ap_const_lv2_0;
    grp_fu_527_p_ce <= ap_const_logic_1;
    grp_fu_527_p_din0 <= mul_1_i_reg_1122;
    grp_fu_527_p_din1 <= mul7_1_i_reg_1127;
    grp_fu_527_p_opcode <= ap_const_lv2_1;
    grp_fu_531_p_ce <= ap_const_logic_1;
    grp_fu_531_p_din0 <= mul10_1_i_reg_1132;
    grp_fu_531_p_din1 <= mul13_1_i_reg_1137;
    grp_fu_531_p_opcode <= ap_const_lv2_0;
    grp_fu_535_p_ce <= ap_const_logic_1;
    grp_fu_535_p_din0 <= tmp_5_reg_1206;
    grp_fu_535_p_din1 <= temp_R_reg_1194;
    grp_fu_535_p_opcode <= ap_const_lv2_1;
    grp_fu_539_p_ce <= ap_const_logic_1;
    grp_fu_539_p_din0 <= reg_672;
    grp_fu_539_p_din1 <= temp_I_reg_1200;
    grp_fu_539_p_opcode <= ap_const_lv2_1;
    grp_fu_543_p_ce <= ap_const_logic_1;
    grp_fu_543_p_din0 <= tmp_5_reg_1206;
    grp_fu_543_p_din1 <= temp_R_reg_1194;
    grp_fu_543_p_opcode <= ap_const_lv2_0;
    grp_fu_547_p_ce <= ap_const_logic_1;
    grp_fu_547_p_din0 <= ap_phi_reg_pp0_iter11_empty_15_reg_548;
    grp_fu_547_p_din1 <= temp_I_reg_1200;
    grp_fu_547_p_opcode <= ap_const_lv2_0;
    grp_fu_551_p_ce <= ap_const_logic_1;
    grp_fu_551_p_din0 <= tmp_s_reg_1228;
    grp_fu_551_p_din1 <= temp_R_1_reg_1216;
    grp_fu_551_p_opcode <= ap_const_lv2_1;
    grp_fu_555_p_ce <= ap_const_logic_1;
    grp_fu_555_p_din0 <= reg_679;
    grp_fu_555_p_din1 <= temp_I_1_reg_1222;
    grp_fu_555_p_opcode <= ap_const_lv2_1;
    grp_fu_559_p_ce <= ap_const_logic_1;
    grp_fu_559_p_din0 <= tmp_s_reg_1228;
    grp_fu_559_p_din1 <= temp_R_1_reg_1216;
    grp_fu_559_p_opcode <= ap_const_lv2_0;
    grp_fu_563_p_ce <= ap_const_logic_1;
    grp_fu_563_p_din0 <= ap_phi_reg_pp0_iter11_empty_14_reg_558;
    grp_fu_563_p_din1 <= temp_I_1_reg_1222;
    grp_fu_563_p_opcode <= ap_const_lv2_0;
    grp_fu_567_p_ce <= ap_const_logic_1;
    grp_fu_567_p_din0 <= tmp_3_reg_1066;
    grp_fu_567_p_din1 <= c2_reg_1054;
    grp_fu_571_p_ce <= ap_const_logic_1;
    grp_fu_571_p_din0 <= tmp_2_reg_1072;
    grp_fu_571_p_din1 <= s2_reg_1060;
    grp_fu_575_p_ce <= ap_const_logic_1;
    grp_fu_575_p_din0 <= tmp_2_reg_1072;
    grp_fu_575_p_din1 <= c2_reg_1054;
    grp_fu_579_p_ce <= ap_const_logic_1;
    grp_fu_579_p_din0 <= tmp_3_reg_1066;
    grp_fu_579_p_din1 <= s2_reg_1060;
    i_4_cast26_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i_4),64));
    icmp_ln214_fu_768_p2 <= "1" when (empty_18_fu_732_p1 = ap_const_lv2_0) else "0";
    icmp_ln216_fu_877_p2 <= "1" when (empty_17_reg_956_pp0_iter9_reg = ap_const_lv2_0) else "0";
    lshr_ln3_fu_736_p4 <= ap_sig_allocacmp_j_load(9 downto 2);
    or_ln205_fu_774_p2 <= (empty_16_fu_718_p1 or ap_const_lv9_1);
    tmp_fu_707_p3 <= ap_sig_allocacmp_i_4(9 downto 9);
    zext_ln208_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln205_fu_774_p2),64));
    zext_ln211_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln3_fu_736_p4),64));
    zext_ln214_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln4_reg_1015_pp0_iter8_reg),64));
end behav;
